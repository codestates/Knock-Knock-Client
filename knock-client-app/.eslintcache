[{"/Users/macbookair13/Desktop/codestates/final_project/Knock-Knock-Client/knock-client-app/src/index.js":"1","/Users/macbookair13/Desktop/codestates/final_project/Knock-Knock-Client/knock-client-app/src/reportWebVitals.js":"2","/Users/macbookair13/Desktop/codestates/final_project/Knock-Knock-Client/knock-client-app/src/App.js":"3","/Users/macbookair13/Desktop/codestates/final_project/Knock-Knock-Client/knock-client-app/src/components/board/dataForm.js":"4","/Users/macbookair13/Desktop/codestates/final_project/Knock-Knock-Client/knock-client-app/src/components/board/board.js":"5","/Users/macbookair13/Desktop/codestates/final_project/Knock-Knock-Client/knock-client-app/src/components/board/roomInfo.js":"6","/Users/macbookair13/Desktop/codestates/final_project/Knock-Knock-Client/knock-client-app/src/components/main/Home.js":"7","/Users/macbookair13/Desktop/codestates/final_project/Knock-Knock-Client/knock-client-app/src/components/board/createRoom.js":"8","/Users/macbookair13/Desktop/codestates/final_project/Knock-Knock-Client/knock-client-app/src/components/main/ModalRouter.js":"9","/Users/macbookair13/Desktop/codestates/final_project/Knock-Knock-Client/knock-client-app/src/components/mypage/MngAccount.js":"10","/Users/macbookair13/Desktop/codestates/final_project/Knock-Knock-Client/knock-client-app/src/components/mypage/Mypage.js":"11","/Users/macbookair13/Desktop/codestates/final_project/Knock-Knock-Client/knock-client-app/src/components/mypage/MngHistory.js":"12","/Users/macbookair13/Desktop/codestates/final_project/Knock-Knock-Client/knock-client-app/src/components/board/stackSelector.js":"13","/Users/macbookair13/Desktop/codestates/final_project/Knock-Knock-Client/knock-client-app/src/utils/options.js":"14","/Users/macbookair13/Desktop/codestates/final_project/Knock-Knock-Client/knock-client-app/src/components/mypage/retrospect.js":"15","/Users/macbookair13/Desktop/codestates/final_project/Knock-Knock-Client/knock-client-app/src/components/mypage/ProfileEditForm.js":"16","/Users/macbookair13/Desktop/codestates/final_project/Knock-Knock-Client/knock-client-app/src/components/mypage/Profile.js":"17"},{"size":366,"mtime":1611046068136,"results":"18","hashOfConfig":"19"},{"size":362,"mtime":1610349287357,"results":"20","hashOfConfig":"19"},{"size":2470,"mtime":1611045939625,"results":"21","hashOfConfig":"19"},{"size":2898,"mtime":1611045939635,"results":"22","hashOfConfig":"19"},{"size":4959,"mtime":1611045939629,"results":"23","hashOfConfig":"19"},{"size":636,"mtime":1611045939636,"results":"24","hashOfConfig":"19"},{"size":3877,"mtime":1610949623002,"results":"25","hashOfConfig":"19"},{"size":2862,"mtime":1611045939633,"results":"26","hashOfConfig":"19"},{"size":1736,"mtime":1611045939637,"results":"27","hashOfConfig":"19"},{"size":6373,"mtime":1611045939639,"results":"28","hashOfConfig":"19"},{"size":9458,"mtime":1611045939647,"results":"29","hashOfConfig":"19"},{"size":2424,"mtime":1611045939644,"results":"30","hashOfConfig":"19"},{"size":447,"mtime":1611045939637,"results":"31","hashOfConfig":"19"},{"size":1663,"mtime":1611045939665,"results":"32","hashOfConfig":"19"},{"size":506,"mtime":1611045939655,"results":"33","hashOfConfig":"19"},{"size":2991,"mtime":1611045939653,"results":"34","hashOfConfig":"19"},{"size":2421,"mtime":1611045939652,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"39"},"y7egwg",{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"39"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"39"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"39"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"39"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"39"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"39"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"39"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"39"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"39"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},"/Users/macbookair13/Desktop/codestates/final_project/Knock-Knock-Client/knock-client-app/src/index.js",["82"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport DataForm from \"./components/board/dataForm\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n    {/* <DataForm />  */}\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n",["83","84"],"/Users/macbookair13/Desktop/codestates/final_project/Knock-Knock-Client/knock-client-app/src/reportWebVitals.js",[],"/Users/macbookair13/Desktop/codestates/final_project/Knock-Knock-Client/knock-client-app/src/App.js",["85","86"],"import React, { useEffect } from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport \"./styles/nav.css\";\n// import Context from \"../utils/context.js\";\nimport PublicBoard from \"../src/components/board/board\";\nimport Home from \"./components/main/Home\";\nimport Mypage from \"./components/mypage/Mypage\";\nimport CreateRoom from \"./components/board/createRoom\";\nimport RoomInfo from \"./components/board/roomInfo\";\nimport MngAccount from \"./components/mypage/MngAccount\";\nimport MngHistory from \"./components/mypage/MngHistory\";\nimport ModalRouter from \"./components/main/ModalRouter\";\n\nconst axios = require(\"axios\");\n\nconst App = () => {\n  return (\n    <Router>\n      <ModalRouter />\n      <div className=\"navbar\">\n        <div className=\"navbar_home\">\n          <Link to=\"/\">HOME</Link>\n        </div>\n        <div className=\"navbar_board\">\n          <Link to=\"/board\">BOARD</Link>\n        </div>\n        <div className=\"navbar_mypage\">\n          <Link to=\"/mypage\">Mypage</Link>\n        </div>\n\n        <div className=\"navbar_mypage\">\n          <Link to=\"/createRoom\">CreateRoom</Link>\n        </div>\n        <div className=\"navbar_mypage\">\n          <Link to=\"/roominfo\">지울꺼임</Link>\n        </div>\n        <div className=\"navbar_mypage\">\n          <Link to=\"/mngHistory\">지울꺼임2</Link>\n        </div>\n      </div>\n\n      <Switch>\n        {/* navbar 경로 */}\n\n        <Route\n          exact\n          path=\"/board\"\n          render={(routeProps) => <PublicBoard {...routeProps} />}\n        />\n\n        <Route\n          exact\n          path=\"/mypage\"\n          render={(routeProps) => <Mypage {...routeProps} />}\n        />\n\n        <Route\n          exact\n          path=\"/\"\n          render={(routeProps) => <Home {...routeProps} />}\n        />\n\n        {/* board 경로 */}\n        <Route\n          exact\n          path=\"/roomInfo\"\n          render={(routeProps) => <RoomInfo {...routeProps} />}\n        />\n\n        <Route\n          exact\n          path=\"/createRoom\"\n          render={(routeProps) => <CreateRoom {...routeProps} />}\n        />\n\n        {/* Mypage 경로 */}\n\n        <Route\n          exact\n          path=\"/mngAccount\"\n          render={(routeProps) => <MngAccount {...routeProps} />}\n        />\n\n        <Route\n          exact\n          path=\"/mngHistory\"\n          render={(routeProps) => <MngHistory {...routeProps} />}\n        />\n      </Switch>\n    </Router>\n  );\n};\n\nexport default App;\n","/Users/macbookair13/Desktop/codestates/final_project/Knock-Knock-Client/knock-client-app/src/components/board/dataForm.js",["87","88","89","90","91"],"import React, { useContext, useEffect, useState } from \"react\";\nimport { stacks } from \"../../utils/options\";\nimport StackSelector from \"./stackSelector\";\n\nconst DataForm = (props) => {\n  const [message, setMessage] = useState(\"\");\n\n  const isCheck = (e) => {\n    e.target.checked\n      ? props.crew(e.target.value)\n      : setMessage(\"인원선택을 해주세요\");\n  };\n\n  const choiceStack = () => {};\n  const storage = [];\n\n  const isPosition = (e) => {\n    storage.push(e.target.value);\n    if (storage.length === 2) {\n      if (storage.reduce((cur, pre) => cur + pre) !== props.crew) {\n        alert(\"인원수에 맞게 포지션의 비율을 다시 입력해주세요.\");\n      } else {\n        props.position(storage[0], storage[1]);\n      }\n    }\n    console.log(storage);\n  };\n  const howMany = [2, 3, 4, 5];\n\n  const getTogether = howMany.map((el, idx) => {\n    return (\n      <>\n        <input\n          onChange={(e) => {\n            isCheck(e);\n          }}\n          type=\"radio\"\n          id={el}\n          name=\"per\"\n          value={el}\n          key={idx}\n        />\n        <label htmlFor={el}>{el === 5 ? `${el}명이상` : `${el}명`}</label>\n      </>\n    );\n  });\n\n  const stack = stacks.map((el, idx) => {\n    return (\n      <option key={idx} value={el}>\n        {el}\n      </option>\n    );\n  });\n\n  const addStack = () => {\n    return <>{stack}</>;\n  };\n  return (\n    <>\n      <form>\n        <div className=\"Q_one\">\n          <p>1. 인원을 선택해주세요.[project는 최대 4명이 권장사항 입니다.]</p>\n          <>{getTogether}</>\n        </div>\n        {props.category === \"Project\" ? (\n          <>\n            <div className=\"Q_two\">\n              <p>2. 원하시는 Position 비율을 입력해주세요.</p>\n              <div>\n                <input\n                  onChange={(e) => {\n                    isPosition(e);\n                  }}\n                  className=\"Front_end\"\n                  type=\"text\"\n                  placeholder=\"프론트엔드\"\n                />\n                <span>명</span>\n                <input\n                  onChange={(e) => {\n                    isPosition(e);\n                  }}\n                  className=\"Back_end\"\n                  type=\"text\"\n                  placeholder=\"백엔드\"\n                />\n                <span>명</span>\n              </div>\n            </div>\n\n            <div className=\"Q_three\">\n              <p>3. 원하시는 스택을 추가해주세요.</p>\n              <StackSelector />\n              {/* <select className=\"Stack\">{stack}</select> */}\n            </div>\n          </>\n        ) : (\n          <div className=\"Q_three\">\n            ß<p>2.스택을 추가해주세요.</p>\n            <StackSelector />\n            {/* <select className=\"Stack\">{stack}</select> */}\n          </div>\n        )}\n      </form>\n    </>\n  );\n};\n\nexport default DataForm;\n","/Users/macbookair13/Desktop/codestates/final_project/Knock-Knock-Client/knock-client-app/src/components/board/board.js",["92","93"],"import React, { useEffect, useState } from \"react\";\nimport \"../../styles/board.css\";\nimport together from \"../../images/boardImg/together.png\";\nimport closed from \"../../images/boardImg/closed.png\";\nimport question from \"../../images/boardImg/Question.png\";\nimport study from \"../../images/boardImg/studyGroup.png\";\nimport axios from \"axios\";\n\nconst PublicBoard = () => {\n  const btnList = [\"All\", \"Study\", \"Project\", \"Q&A\", \"그룹만들기\"];\n\n  const [posts, setPosts] = useState([]);\n  const [postStacks, setPostStacks] = useState([]);\n\n  useEffect(async () => {\n    // You need to restrict it at some point\n    // This is just dummy code and should be replaced by actual\n\n    const posts = await axios.get(\"http://localhost:4000/posts\");\n\n    let postStacksArr = posts.data.data[0].post_stacks\n      .slice(1, -1)\n      .split(\",\")\n      .map((stack) => {\n        return stack.trim().slice(1, -1);\n      });\n\n    setPostStacks(postStacksArr);\n    setPosts(posts.data.data);\n  }, []);\n\n  const roomCardClickHandler = (event) => {\n    console.log(event.nativeEvent.path[0].attributes.value.value);\n  };\n\n  return (\n    <div classNmae=\"B_container\">\n      {/* <header className=\"B_header\"></header> */}\n      <div className=\"B_flexbox-container\">\n        <nav className=\"B_SideBarSec\">\n          <ul>\n            {btnList.map((el, idx) => {\n              return (\n                <li className=\"B_filterBtn\" key={idx}>\n                  {el}\n                </li>\n              );\n            })}\n          </ul>\n        </nav>\n        <tbody className=\"B_RoomContaniner\">\n          {posts.map((post) => {\n            if (post.open) {\n              if (post.category === \"Project\") {\n                return (\n                  <div\n                    className=\"B_RoomCard\"\n                    value={post.id}\n                    onClick={roomCardClickHandler}\n                  >\n                    <img\n                      src={together}\n                      className=\"B_RoomCard-Img1\"\n                      alt=\"\"\n                      value={post.id}\n                    />\n                    <div className=\"B_RoomCard-category\" value={post.id}>\n                      {post.category}\n                    </div>\n                    <div className=\"B_RoomCard-title\" value={post.id}>\n                      {post.title}\n                    </div>\n                    <div className=\"B_RoomCard-total\">\n                      최대 인원 {post.total}명\n                    </div>\n                    <div className=\"B_RoomCard-position\">\n                      프론트엔드 {post.frontend}명 / 백엔드 {post.backend}명\n                    </div>\n                    <div className=\"B_RoomCard-stacks\">\n                      {postStacks.map((stack) => {\n                        return <div className=\"B_RoomCard-stack\">{stack}</div>;\n                      })}\n                    </div>\n                  </div>\n                );\n              }\n              if (post.category === \"Study\") {\n                return (\n                  <div\n                    className=\"B_RoomCard\"\n                    value={post.id}\n                    onClick={roomCardClickHandler}\n                  >\n                    <img\n                      src={study}\n                      className=\"B_RoomCard-Img3\"\n                      alt=\"\"\n                      value={post.id}\n                    />\n                    <p className=\"B_RoomCard-title\" value={post.id}>\n                      {post.title}\n                    </p>\n                  </div>\n                );\n              }\n              if (post.category === \"Question\") {\n                return (\n                  <div\n                    className=\"B_RoomCard\"\n                    value={post.id}\n                    onClick={roomCardClickHandler}\n                  >\n                    <img\n                      src={question}\n                      className=\"B_RoomCard-Img4\"\n                      alt=\"\"\n                      value={post.id}\n                    />\n                    <p className=\"B_RoomCard-title\" value={post.id}>\n                      {post.title}\n                    </p>\n                  </div>\n                );\n              }\n            } else {\n              return (\n                <div\n                  className=\"B_RoomCard\"\n                  value={post.id}\n                  onClick={roomCardClickHandler}\n                >\n                  <img\n                    src={closed}\n                    className=\"B_RoomCard-Img2\"\n                    alt=\"\"\n                    value={post.id}\n                  />\n                  <p className=\"B_RoomCard-title\" value={post.id}>\n                    {post.title}\n                  </p>\n                </div>\n              );\n            }\n          })}\n        </tbody>\n      </div>\n      <div className=\"B_footer\">Welcome to the party</div>\n    </div>\n  );\n};\n\nexport default PublicBoard;\n","/Users/macbookair13/Desktop/codestates/final_project/Knock-Knock-Client/knock-client-app/src/components/board/roomInfo.js",[],"/Users/macbookair13/Desktop/codestates/final_project/Knock-Knock-Client/knock-client-app/src/components/main/Home.js",["94"],"import React from \"react\";\nimport \"../../styles/home.css\";\n\nimport explainImg from \"../../images/homeImg/explainImg.png\";\nimport testImg1 from \"../../images/homeImg/testImg1.png\";\n// import axios from \"axios\";\n\nconst Home = () => {\n  return (\n    <div className=\"H_container\">\n      <section className=\"H_sec1\">\n        <div className=\"H_sec1_wrap1\">\n          <div className=\"H_mainDoor\">\n            <img\n              src=\"https://maxcdn.icons8.com/app/uploads/2019/10/teamwork-illustration-design-process.png\"\n              alt=\"\"\n            />\n          </div>\n        </div>\n        <div className=\"H_sec1_wrap2\">\n          <div className=\"H_mouse\">\n            <span className=\"H_mouseDot\"></span>\n          </div>\n        </div>\n        <div className=\"H_sec1_wrap3\">\n          <div className=\"H_mainSimpleExplain\">\n            <h1>Knock Knock!</h1>\n            <p>새로운 사람들과 의미있는 무언가를 만들어볼 준비가 되셨나요?</p>\n            <p>함께 나아가고 여러분의 발자취를 남겨보세요!</p>\n          </div>\n          <div className=\"H_searchContainer\">\n            <select className=\"H_boardType\">\n              <option value=\"\">게시물 유형</option>\n              <option value=\"project\">프로젝트</option>\n              <option value=\"study\">스터디</option>\n            </select>\n            <div className=\"H_searchBoxBoundary\">|</div>\n            <select className=\"H_boardPeopleNum\">\n              <option value=\"\">인원수</option>\n              <option value=\"2\">2명</option>\n              <option value=\"3\">3명</option>\n              <option value=\"4\">4명</option>\n              <option value=\"more\">4명 이상</option>\n            </select>\n            <div className=\"H_searchBoxBoundary\">|</div>\n            <input type=\"text\" className=\"H_boardSearchTextBox\" />\n            <div className=\"H_boardSearchBtn\">\n              <img\n                className=\"H_borardSearchBtnIcon\"\n                src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/0/0b/Search_Icon.svg/1024px-Search_Icon.svg.png\"\n              />\n            </div>\n          </div>\n        </div>\n      </section>\n      <section className=\"H_sec2\">\n        <div className=\"H_sec2_wrap1\">\n          <p>새로운 사람들과 함께 나아가고 여러분의 발자취를 남겨보세요!</p>\n          <p>\n            여러분의 스터디, 프로젝트를 차분히 시작하거나 직접 참여해보세요!\n          </p>\n          <p>이제, 여러분의 시작을 두드리세요!</p>\n        </div>\n        <div className=\"H_sec2_wrap2\">\n          <img src={explainImg} className=\"H_explainImg\" alt=\"\" />\n        </div>\n      </section>\n      <section className=\"H_sec3\">\n        <div className=\"H_sec3_wrap1\">\n          <p>2020년, 현재까지 447 개의 프로젝트를 완료했습니다</p>\n        </div>\n        <div className=\"H_sec3_wrap2\">\n          <img src={testImg1} alt=\"\" />\n        </div>\n      </section>\n      <section className=\"H_sec4\">\n        하이 린수 프로젝트 여기여기 ?\n        <div className=\"H_exhibition\">\n          <img className=\"\" alt=\"\" />\n          <p className=\"\">I wanna make a dreamteam</p>\n        </div>\n        <div className=\"H_exhibition\">\n          <img className=\"\" alt=\"\" />\n          <p className=\"\">I wanna make a dreamteam</p>\n        </div>\n        <div className=\"H_exhibition\">\n          <img className=\"\" alt=\"\" />\n          <p className=\"\">I wanna make a dreamteam</p>\n        </div>\n        <div className=\"H_exhibition\">\n          <img className=\"\" alt=\"\" />\n          <p className=\"\">I wanna make a dreamteam</p>\n        </div>\n      </section>\n      <footer className=\"H_footer\">\n        <div className=\"H_GoToBoard\" onClick={() => alert(\"인수바보\")}>\n          더보기\n        </div>\n      </footer>\n    </div>\n  );\n};\n\nexport default Home;\n","/Users/macbookair13/Desktop/codestates/final_project/Knock-Knock-Client/knock-client-app/src/components/board/createRoom.js",["95","96","97"],"import React, { useState } from \"react\";\nimport { CKEditor } from \"@ckeditor/ckeditor5-react\";\nimport ClassicEditor from \"@ckeditor/ckeditor5-build-classic\";\nimport DataForm from \"./dataForm\";\nimport \"../../styles/createRoom.css\";\nconst axios = require(\"axios\");\n\nconst CreateRoom = () => {\n  const [category, setCategory] = useState(\"Project\");\n  const [title, setTitle] = useState(\"\");\n  const [crew, setCrew] = useState(\"\");\n  const [position, setPosition] = useState([]);\n  const [stack, setStack] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [roominfo, setRoomInfo] = useState(\"\");\n\n  const createRoom = () => {\n    axios({\n      url: \"/createRoom\",\n      method: \"POST\",\n      data: {},\n      withCredentials: true,\n      headers: \"application/json\",\n    });\n  };\n\n  const getTitle = (e) => {\n    !e.target.value ? setTitle(\"\") : setTitle(e.target.value);\n  };\n\n  const getCrew = (e) => {\n    setCrew(e);\n    console.log(\"crew\", crew);\n  };\n\n  const getPosition = (e) => {\n    setPosition(e);\n    console.log(\"position\", position);\n    console.log(e);\n  };\n\n  const getStack = (e) => {\n    !e.target.value ? setStack(\"\") : setStack(e.target.value);\n  };\n\n  const postRoomInfo = () => {\n    const body = {\n      category: category,\n      title: title,\n      crew: crew,\n      position: position,\n      stack: stack,\n      description: description,\n    };\n    console.log(\"?????\", body);\n    // setRoomInfo(body);\n  };\n\n  const studyType = [\"Project\", \"Study\", \"Question\"];\n\n  const postStudyType = studyType.map((el, idx) => {\n    return (\n      <option value={el} key={idx}>\n        {el}\n      </option>\n    );\n  });\n\n  return (\n    <div className=\"Create_Container\">\n      <h2>Create Post</h2>\n      <select onChange={(e) => setCategory(e.target.value)}>\n        <>{postStudyType}</>\n      </select>\n      <div>\n        <textarea\n          className=\"title_Box\"\n          placeholder=\"제목을 입력해주세요\"\n        ></textarea>\n      </div>\n\n      <DataForm\n        className=\"Dataform\"\n        category={category}\n        crew={getCrew}\n        title={getTitle}\n        position={getPosition}\n        stack={getStack}\n      />\n\n      <CKEditor\n        editor={ClassicEditor}\n        onReady={(editor) => {\n          // You can store the \"editor\" and use when it is needed.\n          console.log(\"Editor is ready to use!\", editor);\n        }}\n        onChange={(event, editor) => {\n          const data = editor.getData();\n          setDescription(data);\n        }}\n        onBlur={(event, editor) => {\n          console.log(\"Blur.\", editor);\n        }}\n        onFocus={(event, editor) => {\n          console.log(\"Focus.\", editor);\n        }}\n      />\n\n      <footer className=\"C_footer\">\n        <button onClick={() => postRoomInfo()}>SAVE</button>\n      </footer>\n    </div>\n  );\n};\n\nexport default CreateRoom;\n","/Users/macbookair13/Desktop/codestates/final_project/Knock-Knock-Client/knock-client-app/src/components/main/ModalRouter.js",["98"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Modal from \"react-modal\";\nimport \"../../styles/home.css\";\nimport github from \"../../images/logo/github.png\";\nimport google from \"../../images/logo/google.png\";\n\nconst customStyles = {\n  content: {\n    width: \"300px\",\n    top: \"50%\",\n    left: \"50%\",\n    right: \"auto\",\n    bottom: \"auto\",\n    marginRight: \"-50%\",\n    transform: \"translate(-50%, -50%)\",\n  },\n};\n\nexport default function ModalRouter() {\n  var subtitle;\n  const [modalIsOpen, setIsOpen] = React.useState(false);\n  function openModal() {\n    setIsOpen(true);\n  }\n\n  function afterOpenModal() {\n    // references are now sync'd and can be accessed.\n    subtitle.style.color = \"#f00\";\n  }\n\n  function closeModal() {\n    setIsOpen(false);\n  }\n\n  return (\n    <div>\n      <button onClick={openModal}>시작하기</button>\n      <Modal\n        isOpen={modalIsOpen}\n        onAfterOpen={afterOpenModal}\n        onRequestClose={closeModal}\n        style={customStyles}\n        contentLabel=\"Example Modal\"\n      >\n        <h1 ref={(_subtitle) => (subtitle = _subtitle)}>Knock Knock</h1>\n        <div>로그인을 해주세요.</div>\n        <form>\n          <div className=\"login_logo\">\n            <img\n              className=\"google\"\n              onClick={(e) => console.log(e)}\n              alt=\"\"\n              value=\"google\"\n              src={google}\n            ></img>\n            <img\n              className=\"github\"\n              onClick={(e) => console.log(e.target.value)}\n              alt=\"\"\n              value=\"github\"\n              src={github}\n            ></img>\n          </div>\n        </form>\n        <button onClick={closeModal}>뒤로가기</button>\n      </Modal>\n    </div>\n  );\n}\n","/Users/macbookair13/Desktop/codestates/final_project/Knock-Knock-Client/knock-client-app/src/components/mypage/MngAccount.js",["99"],"import React from \"react\";\nimport axios from \"axios\";\nimport \"../../styles/mypage.css\";\n\nimport Profile from \"./Profile\";\n\nclass MngAccount extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.mypageClickHandler = this.mypageClickHandler.bind(this);\n    this.userGrade = this.userGrade.bind(this);\n    this.userPropensity = this.userPropensity.bind(this);\n    this.userMood = this.userMood.bind(this);\n    this.storageInfo = this.storageInfo.bind(this);\n    this.userStack = this.userStack.bind(this);\n\n    this.state = {\n      username: \"jnoodle\",\n      isMypage: true,\n      userInfo: [],\n    };\n    this.grade = \"\";\n    this.propensity = [];\n    this.mood = \"\";\n    this.stack = [];\n  }\n\n  mypageClickHandler() {\n    // 사용자 info 값 전달해야됨\n    this.props.history.push(\"/mypage\");\n    this.setState({ isMypage: false });\n  }\n\n  userGrade(value) {\n    this.grade = value.target.value;\n  }\n\n  userPropensity(value) {\n    if (value.target.checked) {\n      this.propensity.push(value.target.value);\n    } else {\n      this.propensity.splice(this.propensity.indexOf(value.target.value), 1);\n    }\n\n    console.log(this.propensity);\n  }\n\n  userStack(value) {\n    if (value.target.checked) {\n      this.stack.push(value.target.value);\n    } else {\n      this.stack.splice(this.stack.indexOf(value.target.value), 1);\n    }\n\n    console.log(this.stack);\n  }\n\n  userMood(value) {\n    this.mood = value.target.value;\n  }\n\n  storageInfo() {\n    let userInfo = {\n      userGrade: this.grade,\n      propensity: this.propensity,\n      userMood: this.mood,\n      userStack: this.stack,\n    };\n\n    this.props.history.push(\"/mypage\", userInfo);\n  }\n\n  render() {\n    console.log(this.state.userInfo);\n    return (\n      <div className=\"mypageContainer\">\n        <div className=\"mypageContainer_blankSec\"></div>\n        <Profile\n          isMypage={this.state.isMypage}\n          mypageClickHandler={this.mypageClickHandler}\n        />\n        <div className=\"mypageContainer_editUserInfoFormSec\">\n          <div className=\"editUserInfoFormSec_term\">\n            <div className=\"editUserInfoFormSec_term_phrase\">\n              <h1>{this.state.username}님의 기수를 선택해주세요</h1>\n              <input\n                onChange={(e) => this.userGrade(e)}\n                tpye=\"text\"\n                placeholder=\"PRE7기 이준희\"\n              />\n            </div>\n          </div>\n          <div className=\"editUserInfoFormSec_propensity\">\n            <div className=\"editUserInfoFormSec_propensity_phrase\">\n              <h1>{this.state.username}님의 성향을 체크해주세요</h1>\n              <input\n                onChange={(e) => {\n                  this.userPropensity(e);\n                }}\n                type=\"checkbox\"\n                value=\"소심한\"\n                className=\"propensity_checker\"\n              ></input>\n              <label htmlFor=\"소극적\">소심한</label>\n              <input\n                onChange={(e) => {\n                  this.userPropensity(e);\n                }}\n                type=\"checkbox\"\n                value=\"적극적\"\n                className=\"propensity_checker\"\n              ></input>\n              <label htmlFor=\"적극적\">적극적</label>\n              <input\n                onChange={(e) => {\n                  this.userPropensity(e);\n                }}\n                type=\"checkbox\"\n                value=\"냉소적\"\n                className=\"propensity_checker\"\n              ></input>\n              <label htmlFor=\"냉소적\">냉소적</label>\n              <input\n                onChange={(e) => {\n                  this.userPropensity(e);\n                }}\n                type=\"checkbox\"\n                value=\"계획적\"\n                className=\"propensity_checker\"\n              ></input>\n              <label htmlFor=\"계획적\">계획적</label>\n              <input\n                onChange={(e) => {\n                  this.userPropensity(e);\n                }}\n                type=\"checkbox\"\n                value=\"랑랑한\"\n                className=\"propensity_checker\"\n              ></input>\n              <label htmlFor=\"랑랑한\">랑랑한</label>\n              <input\n                onChange={(e) => {\n                  this.userPropensity(e);\n                }}\n                type=\"checkbox\"\n                value=\"완벽한\"\n                className=\"propensity_checker\"\n              ></input>\n              <label htmlFor=\"완벽한\">완벽한</label>\n            </div>\n          </div>\n          <div className=\"editUserInfoFormSec_mood\">\n            <div className=\"editUserInfoFormSec_mood_phrase\">\n              <h1>{this.state.username}님의 오늘 기분에 대해 알려주세요</h1>\n              <textarea\n                onChange={(e) => {\n                  this.userMood(e);\n                }}\n                placeholder=\"오늘 기분을 알려주세요 : )\"\n              />\n            </div>\n          </div>\n          <div className=\"editUserInfoFormSec_mood\">\n            <div className=\"editUserInfoFormSec_mood_phrase\">\n              <h1>\n                {this.state.username}님이 주로 사용하는 스택을 선택해주세요.\n              </h1>\n\n              <input\n                onChange={(e) => {\n                  this.userStack(e);\n                }}\n                type=\"checkbox\"\n                value=\"Javascript\"\n                className=\"userStack\"\n              ></input>\n              <label htmlFor=\"Javascript\">Javascript</label>\n\n              <input\n                onChange={(e) => {\n                  this.userStack(e);\n                }}\n                type=\"checkbox\"\n                value=\"Python\"\n                className=\"userStack\"\n              ></input>\n              <label htmlFor=\"Python\">Python</label>\n\n              <input\n                onChange={(e) => {\n                  this.userStack(e);\n                }}\n                type=\"checkbox\"\n                value=\"React\"\n                className=\"userStack\"\n              ></input>\n              <label htmlFor=\"React\">React</label>\n            </div>\n          </div>\n          <div className=\"editUserInfoFormSec_saveBtn\">\n            <button onClick={() => this.storageInfo()}>내마음속에저장</button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default MngAccount;\n","/Users/macbookair13/Desktop/codestates/final_project/Knock-Knock-Client/knock-client-app/src/components/mypage/Mypage.js",["100"],"import React from \"react\";\nimport axios from \"axios\";\nimport \"../../styles/mypage.css\";\n\nimport Profile from \"./Profile\";\n\nclass Mypage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.accountMngClickHandler = this.accountMngClickHandler.bind(this);\n\n    this.state = {\n      isAccountMng: true,\n      isMypage: false,\n    };\n\n    console.log(this.props);\n  }\n\n  accountMngClickHandler() {\n    this.props.history.push(\"/mngAccount\");\n    this.setState({ isAccountMng: false });\n  }\n\n  render() {\n    return (\n      <div className=\"mypageContainer\">\n        <div className=\"mypageContainer_blankSec\"></div>\n        <Profile\n          isAccountMng={this.state.isAccountMng}\n          isMypage={this.state.isMypage}\n          accountMngClickHandler={this.accountMngClickHandler}\n          userInfo={this.props.location.state}\n        />\n        <div className=\"mypageContainer_boardListSec\">\n          <div className=\"boardListSec_openboardWrap\">\n            <div className=\"openboardWrap_title\">\n              <h1>열린 게시물</h1>\n            </div>\n            <div className=\"openboardWrap_boardList\">\n              <div className=\"boardList_openboard\">\n                <div className=\"boardList_openboard_brief\">\n                  <h1>파이썬 2주안에 뽀개기</h1>\n                  <h2>인원: 6/10</h2>\n                  <h2>진행중</h2>\n                </div>\n                <div className=\"boardList_openboard_detail\">\n                  <div className=\"openboard_detail_title_writer\">\n                    <h1>파이썬 2주안에 뽀개기</h1>\n                    <h2>그룹장: jnoodle</h2>\n                  </div>\n                  <p>\n                    2주 안에 다같이 파이썬을 뽀개 봅시다. 매주 러버덕 형식으로\n                    파이썬을 공부하고, 예제를 따라합니다.\n                  </p>\n                </div>\n              </div>\n              <div className=\"boardList_openboard\">\n                <div className=\"boardList_openboard_brief\">\n                  <h1>파이썬 2주안에 뽀개기</h1>\n                  <h2>인원: 6/10</h2>\n                  <h2>진행중</h2>\n                </div>\n                <div className=\"boardList_openboard_detail\">\n                  <div className=\"openboard_detail_title_writer\">\n                    <h1>파이썬 2주안에 뽀개기</h1>\n                    <h2>그룹장: jnoodle</h2>\n                  </div>\n                  <p>\n                    2주 안에 다같이 파이썬을 뽀개 봅시다. 매주 러버덕 형식으로\n                    파이썬을 공부하고, 예제를 따라합니다.\n                  </p>\n                </div>\n              </div>\n              <div className=\"boardList_openboard\">\n                <div className=\"boardList_openboard_brief\">\n                  <h1>파이썬 2주안에 뽀개기</h1>\n                  <h2>인원: 6/10</h2>\n                  <h2>진행중</h2>\n                </div>\n                <div className=\"boardList_openboard_detail\">\n                  <div className=\"openboard_detail_title_writer\">\n                    <h1>파이썬 2주안에 뽀개기</h1>\n                    <h2>그룹장: jnoodle</h2>\n                  </div>\n                  <p>\n                    2주 안에 다같이 파이썬을 뽀개 봅시다. 매주 러버덕 형식으로\n                    파이썬을 공부하고, 예제를 따라합니다.\n                  </p>\n                </div>\n              </div>\n              <div className=\"boardList_openboard\">\n                <div className=\"boardList_openboard_brief\">\n                  <h1>파이썬 2주안에 뽀개기</h1>\n                  <h2>인원: 6/10</h2>\n                  <h2>진행중</h2>\n                </div>\n                <div className=\"boardList_openboard_detail\">\n                  <div className=\"openboard_detail_title_writer\">\n                    <h1>파이썬 2주안에 뽀개기</h1>\n                    <h2>그룹장: jnoodle</h2>\n                  </div>\n                  <p>\n                    2주 안에 다같이 파이썬을 뽀개 봅시다. 매주 러버덕 형식으로\n                    파이썬을 공부하고, 예제를 따라합니다.\n                  </p>\n                </div>\n              </div>\n              <div className=\"boardList_openboard\">\n                <div className=\"boardList_openboard_brief\">\n                  <h1>파이썬 2주안에 뽀개기</h1>\n                  <h2>인원: 6/10</h2>\n                  <h2>진행중</h2>\n                </div>\n                <div className=\"boardList_openboard_detail\">\n                  <div className=\"openboard_detail_title_writer\">\n                    <h1>파이썬 2주안에 뽀개기</h1>\n                    <h2>그룹장: jnoodle</h2>\n                  </div>\n                  <p>\n                    2주 안에 다같이 파이썬을 뽀개 봅시다. 매주 러버덕 형식으로\n                    파이썬을 공부하고, 예제를 따라합니다.\n                  </p>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"boardListSec_closeboardWrap\">\n            <div className=\"closeboardWrap_title\">\n              <h1>닫힌 게시물</h1>\n            </div>\n            <div className=\"closeboardWrap_boardList\">\n              <div className=\"boardList_closeboard\">\n                <div className=\"boardList_closeboard_brief\">\n                  <h1>파이썬 2주안에 뽀개기</h1>\n                  <h2>인원: 6/10</h2>\n                  <h2>종료</h2>\n                </div>\n                <div className=\"boardList_closeboard_detail\">\n                  <div className=\"closeboard_detail_title_writer\">\n                    <h1>파이썬 2주안에 뽀개기</h1>\n                    <h2>그룹장: jnoodle</h2>\n                  </div>\n                  <p>\n                    2주 안에 다같이 파이썬을 뽀개 봅시다. 매주 러버덕 형식으로\n                    파이썬을 공부하고, 예제를 따라합니다.\n                  </p>\n                </div>\n              </div>\n              <div className=\"boardList_closeboard\">\n                <div className=\"boardList_closeboard_brief\">\n                  <h1>파이썬 2주안에 뽀개기</h1>\n                  <h2>인원: 6/10</h2>\n                  <h2>종료</h2>\n                </div>\n                <div className=\"boardList_closeboard_detail\">\n                  <div className=\"closeboard_detail_title_writer\">\n                    <h1>파이썬 2주안에 뽀개기</h1>\n                    <h2>그룹장: jnoodle</h2>\n                  </div>\n                  <p>\n                    2주 안에 다같이 파이썬을 뽀개 봅시다. 매주 러버덕 형식으로\n                    파이썬을 공부하고, 예제를 따라합니다.\n                  </p>\n                </div>\n              </div>\n              <div className=\"boardList_closeboard\">\n                <div className=\"boardList_closeboard_brief\">\n                  <h1>파이썬 2주안에 뽀개기</h1>\n                  <h2>인원: 6/10</h2>\n                  <h2>종료</h2>\n                </div>\n                <div className=\"boardList_closeboard_detail\">\n                  <div className=\"closeboard_detail_title_writer\">\n                    <h1>파이썬 2주안에 뽀개기</h1>\n                    <h2>그룹장: jnoodle</h2>\n                  </div>\n                  <p>\n                    2주 안에 다같이 파이썬을 뽀개 봅시다. 매주 러버덕 형식으로\n                    파이썬을 공부하고, 예제를 따라합니다.\n                  </p>\n                </div>\n              </div>\n              <div className=\"boardList_closeboard\">\n                <div className=\"boardList_closeboard_brief\">\n                  <h1>파이썬 2주안에 뽀개기</h1>\n                  <h2>인원: 6/10</h2>\n                  <h2>종료</h2>\n                </div>\n                <div className=\"boardList_closeboard_detail\">\n                  <div className=\"closeboard_detail_title_writer\">\n                    <h1>파이썬 2주안에 뽀개기</h1>\n                    <h2>그룹장: jnoodle</h2>\n                  </div>\n                  <p>\n                    2주 안에 다같이 파이썬을 뽀개 봅시다. 매주 러버덕 형식으로\n                    파이썬을 공부하고, 예제를 따라합니다.\n                  </p>\n                </div>\n              </div>\n              <div className=\"boardList_closeboard\">\n                <div className=\"boardList_closeboard_brief\">\n                  <h1>파이썬 2주안에 뽀개기</h1>\n                  <h2>인원: 6/10</h2>\n                  <h2>종료</h2>\n                </div>\n                <div className=\"boardList_closeboard_detail\">\n                  <div className=\"closeboard_detail_title_writer\">\n                    <h1>파이썬 2주안에 뽀개기</h1>\n                    <h2>그룹장: jnoodle</h2>\n                  </div>\n                  <p>\n                    2주 안에 다같이 파이썬을 뽀개 봅시다. 매주 러버덕 형식으로\n                    파이썬을 공부하고, 예제를 따라합니다.\n                  </p>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Mypage;\n","/Users/macbookair13/Desktop/codestates/final_project/Knock-Knock-Client/knock-client-app/src/components/mypage/MngHistory.js",[],"/Users/macbookair13/Desktop/codestates/final_project/Knock-Knock-Client/knock-client-app/src/components/board/stackSelector.js",[],"/Users/macbookair13/Desktop/codestates/final_project/Knock-Knock-Client/knock-client-app/src/utils/options.js",[],"/Users/macbookair13/Desktop/codestates/final_project/Knock-Knock-Client/knock-client-app/src/components/mypage/retrospect.js",["101"],"import React from \"react\";\nimport \"../../styles/history.css\";\n\nconst SendRetrospect = (props) => {\n  const list = props.value.map((value, idx) => {\n    if (idx >= 0) {\n      return (\n        <li key={idx} className=\"His_JournalForm\">\n          <p className=\"Journal_username\">{value.username}</p>\n          <p className=\"Journal_date\">{value.date}</p>\n          <p className=\"Journal_text\">{value.retrospect}</p>\n        </li>\n      );\n    }\n  });\n\n  return <>{list}</>;\n};\n\nexport default SendRetrospect;\n","/Users/macbookair13/Desktop/codestates/final_project/Knock-Knock-Client/knock-client-app/src/components/mypage/ProfileEditForm.js",["102"],"import React, { Component } from \"react\";\nimport \"../../styles/profileEdit.css\";\nimport { fakeData } from \"../../utils/options\";\nclass ProfileEdit extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      fakeData,\n      projectCategory: \"\",\n    };\n\n    this.filter = this.filter.bind(this);\n    this.openDoor = this.openDoor.bind(this);\n  }\n\n  openDoor(e) {\n    console.log(e.nativeEvent.path[0].attributes.value.value);\n  }\n\n  filter(event) {\n    this.setState({ projectCategory: event.target.value });\n  }\n\n  render() {\n    let filteredProject = [];\n\n    if (this.state.projectCategory === \"\") {\n      filteredProject = this.state.fakeData;\n    } else {\n      this.state.fakeData.forEach((project) => {\n        if (project.category === this.state.projectCategory) {\n          filteredProject.push(project);\n        }\n      });\n    }\n\n    console.log(filteredProject);\n    return (\n      <div className=\"mypageContainer_profileSec\">\n        <header className=\"P_headers\">\n          <p className=\"P_subtitle\">히스토리</p>\n        </header>\n\n        <select className=\"List_filter\" onChange={this.filter}>\n          <option value=\"\">카테고리를 선택해주세요.</option>\n          <option value=\"Project\">Project</option>\n          <option value=\"Study\">Study</option>\n          <option value=\"Question\">Question</option>\n        </select>\n\n        <nav className=\"List_container\">\n          {filteredProject.map((project, idx) => {\n            return (\n              <div onClick={this.openDoor} value={project.id}>\n                <div className=\"MyList\" key={idx} value={project.id}>\n                  <ul className=\"Context\" value={project.id}>\n                    <li value=\"Project\" value={project.id}>\n                      {project.category}\n                    </li>\n                    <li className=\"Context_projectTitle\" value={project.id}>\n                      {project.projectTitle}\n                    </li>\n                    {project.stacks ? (\n                      <li value={project.id}>{project.stacks.join(\"/\")}</li>\n                    ) : (\n                      <li value={project.id}>스택 없음</li>\n                    )}\n                  </ul>\n                  <div className=\"MyList_status\" value={project.id}>\n                    <div className=\"status_createdAt\" value={project.id}>\n                      {project.createdAt}\n                    </div>\n                    {project.status === \"OPEN\" ? (\n                      <div className=\"status_projectOn\" value={project.id}>\n                        {project.status}\n                      </div>\n                    ) : (\n                      <div className=\"status_projectOff\" value={project.id}>\n                        {project.status}\n                      </div>\n                    )}\n                  </div>\n                </div>\n              </div>\n            );\n          })}\n        </nav>\n      </div>\n    );\n  }\n}\n\nexport default ProfileEdit;\n","/Users/macbookair13/Desktop/codestates/final_project/Knock-Knock-Client/knock-client-app/src/components/mypage/Profile.js",[],{"ruleId":"103","severity":1,"message":"104","line":6,"column":8,"nodeType":"105","messageId":"106","endLine":6,"endColumn":16},{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","replacedBy":"110"},{"ruleId":"103","severity":1,"message":"111","line":1,"column":17,"nodeType":"105","messageId":"106","endLine":1,"endColumn":26},{"ruleId":"103","severity":1,"message":"112","line":14,"column":7,"nodeType":"105","messageId":"106","endLine":14,"endColumn":12},{"ruleId":"103","severity":1,"message":"113","line":1,"column":17,"nodeType":"105","messageId":"106","endLine":1,"endColumn":27},{"ruleId":"103","severity":1,"message":"111","line":1,"column":29,"nodeType":"105","messageId":"106","endLine":1,"endColumn":38},{"ruleId":"103","severity":1,"message":"114","line":6,"column":10,"nodeType":"105","messageId":"106","endLine":6,"endColumn":17},{"ruleId":"103","severity":1,"message":"115","line":14,"column":9,"nodeType":"105","messageId":"106","endLine":14,"endColumn":20},{"ruleId":"103","severity":1,"message":"116","line":56,"column":9,"nodeType":"105","messageId":"106","endLine":56,"endColumn":17},{"ruleId":"117","severity":1,"message":"118","line":15,"column":13,"nodeType":"119","endLine":30,"endColumn":4},{"ruleId":"120","severity":1,"message":"121","line":52,"column":29,"nodeType":"119","messageId":"122","endLine":52,"endColumn":31},{"ruleId":"123","severity":1,"message":"124","line":48,"column":15,"nodeType":"125","endLine":51,"endColumn":17},{"ruleId":"103","severity":1,"message":"126","line":15,"column":10,"nodeType":"105","messageId":"106","endLine":15,"endColumn":18},{"ruleId":"103","severity":1,"message":"127","line":15,"column":20,"nodeType":"105","messageId":"106","endLine":15,"endColumn":31},{"ruleId":"103","severity":1,"message":"128","line":17,"column":9,"nodeType":"105","messageId":"106","endLine":17,"endColumn":19},{"ruleId":"103","severity":1,"message":"129","line":2,"column":8,"nodeType":"105","messageId":"106","endLine":2,"endColumn":16},{"ruleId":"103","severity":1,"message":"130","line":2,"column":8,"nodeType":"105","messageId":"106","endLine":2,"endColumn":13},{"ruleId":"103","severity":1,"message":"130","line":2,"column":8,"nodeType":"105","messageId":"106","endLine":2,"endColumn":13},{"ruleId":"120","severity":1,"message":"121","line":5,"column":45,"nodeType":"119","messageId":"122","endLine":5,"endColumn":47},{"ruleId":"131","severity":1,"message":"132","line":58,"column":41,"nodeType":"133","endLine":58,"endColumn":59},"no-unused-vars","'DataForm' is defined but never used.","Identifier","unusedVar","no-native-reassign",["134"],"no-negated-in-lhs",["135"],"'useEffect' is defined but never used.","'axios' is assigned a value but never used.","'useContext' is defined but never used.","'message' is assigned a value but never used.","'choiceStack' is assigned a value but never used.","'addStack' is assigned a value but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'roominfo' is assigned a value but never used.","'setRoomInfo' is assigned a value but never used.","'createRoom' is assigned a value but never used.","'ReactDOM' is defined but never used.","'axios' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-global-assign","no-unsafe-negation"]