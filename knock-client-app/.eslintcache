[{"/Users/tate/Desktop/study/KnockKnock/Knock-Knock-Client/knock-client-app/src/index.js":"1","/Users/tate/Desktop/study/KnockKnock/Knock-Knock-Client/knock-client-app/src/reportWebVitals.js":"2","/Users/tate/Desktop/study/KnockKnock/Knock-Knock-Client/knock-client-app/src/App.js":"3","/Users/tate/Desktop/study/KnockKnock/Knock-Knock-Client/knock-client-app/src/components/main/ModalRouter.js":"4","/Users/tate/Desktop/study/KnockKnock/Knock-Knock-Client/knock-client-app/src/components/main/Home.js":"5","/Users/tate/Desktop/study/KnockKnock/Knock-Knock-Client/knock-client-app/src/components/mypage/MngAccount.js":"6","/Users/tate/Desktop/study/KnockKnock/Knock-Knock-Client/knock-client-app/src/components/board/createRoom.js":"7","/Users/tate/Desktop/study/KnockKnock/Knock-Knock-Client/knock-client-app/src/components/board/board.js":"8","/Users/tate/Desktop/study/KnockKnock/Knock-Knock-Client/knock-client-app/src/components/mypage/MngHistory.js":"9","/Users/tate/Desktop/study/KnockKnock/Knock-Knock-Client/knock-client-app/src/components/board/roomInfo.js":"10","/Users/tate/Desktop/study/KnockKnock/Knock-Knock-Client/knock-client-app/src/components/mypage/Mypage.js":"11","/Users/tate/Desktop/study/KnockKnock/Knock-Knock-Client/knock-client-app/src/utils/options.js":"12","/Users/tate/Desktop/study/KnockKnock/Knock-Knock-Client/knock-client-app/src/components/mypage/Profile.js":"13","/Users/tate/Desktop/study/KnockKnock/Knock-Knock-Client/knock-client-app/src/components/board/dataForm.js":"14","/Users/tate/Desktop/study/KnockKnock/Knock-Knock-Client/knock-client-app/src/components/board/postReply.js":"15","/Users/tate/Desktop/study/KnockKnock/Knock-Knock-Client/knock-client-app/src/components/mypage/Retrospect.js":"16","/Users/tate/Desktop/study/KnockKnock/Knock-Knock-Client/knock-client-app/src/components/mypage/MngHistoryProfile.js":"17","/Users/tate/Desktop/study/KnockKnock/Knock-Knock-Client/knock-client-app/src/components/mypage/PrintStackLogo.js":"18"},{"size":288,"mtime":1611073640785,"results":"19","hashOfConfig":"20"},{"size":362,"mtime":1610351149920,"results":"21","hashOfConfig":"20"},{"size":2447,"mtime":1611299342174,"results":"22","hashOfConfig":"20"},{"size":2253,"mtime":1611288022159,"results":"23","hashOfConfig":"20"},{"size":4699,"mtime":1611323453898,"results":"24","hashOfConfig":"20"},{"size":4585,"mtime":1611361506268,"results":"25","hashOfConfig":"20"},{"size":3657,"mtime":1611353727351,"results":"26","hashOfConfig":"20"},{"size":7843,"mtime":1611363767097,"results":"27","hashOfConfig":"20"},{"size":3927,"mtime":1611353732678,"results":"28","hashOfConfig":"20"},{"size":4717,"mtime":1611369304588,"results":"29","hashOfConfig":"20"},{"size":3907,"mtime":1611353736150,"results":"30","hashOfConfig":"20"},{"size":1885,"mtime":1611357575048,"results":"31","hashOfConfig":"20"},{"size":3355,"mtime":1611368822742,"results":"32","hashOfConfig":"20"},{"size":2751,"mtime":1611320971526,"results":"33","hashOfConfig":"20"},{"size":491,"mtime":1611203426045,"results":"34","hashOfConfig":"20"},{"size":528,"mtime":1611298595484,"results":"35","hashOfConfig":"20"},{"size":3469,"mtime":1611353734501,"results":"36","hashOfConfig":"20"},{"size":1078,"mtime":1611300029268,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"9synz5",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"40"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"40"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"40"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"40"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"40"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"40"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"40"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"40"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"40"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"40"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"40"},"/Users/tate/Desktop/study/KnockKnock/Knock-Knock-Client/knock-client-app/src/index.js",[],["86","87"],"/Users/tate/Desktop/study/KnockKnock/Knock-Knock-Client/knock-client-app/src/reportWebVitals.js",[],"/Users/tate/Desktop/study/KnockKnock/Knock-Knock-Client/knock-client-app/src/App.js",["88"],"import React, { useEffect } from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport \"./styles/navAndLogo.css\";\n// import Context from \"../utils/context.js\";\nimport PublicBoard from \"../src/components/board/board\";\nimport Home from \"./components/main/Home\";\nimport Mypage from \"./components/mypage/Mypage\";\nimport CreateRoom from \"./components/board/createRoom\";\nimport RoomInfo from \"./components/board/roomInfo\";\nimport MngAccount from \"./components/mypage/MngAccount\";\nimport MngHistory from \"./components/mypage/MngHistory\";\nimport ModalRouter from \"./components/main/ModalRouter\";\n\nconst App = () => {\n  return (\n    <Router>\n      <div className=\"navbar\">\n        <div className=\"navbar_home\">\n          <ModalRouter />\n          <Link to=\"/\">HOME</Link>\n        </div>\n        <div className=\"navbar_board\">\n          <Link to=\"/board\">BOARD</Link>\n        </div>\n        <div className=\"navbar_mypage\">\n          <Link to=\"/mypage\">Mypage</Link>\n        </div>\n\n        <div className=\"navbar_mypage\">\n          <Link to=\"/createRoom\">CreateRoom</Link>\n        </div>\n        <div className=\"navbar_mypage\">\n          <Link to=\"/roominfo\">지울꺼임</Link>\n        </div>\n        <div className=\"navbar_mypage\">\n          <Link to=\"/mngHistory\">지울꺼임2</Link>\n        </div>\n      </div>\n\n      <Switch>\n        {/* navbar 경로 */}\n        <Route\n          exact\n          path=\"/board\"\n          render={(routeProps) => <PublicBoard {...routeProps} />}\n        />\n\n        <Route\n          exact\n          path=\"/mypage\"\n          render={(routeProps) => <Mypage {...routeProps} />}\n        />\n\n        <Route\n          exact\n          path=\"/\"\n          render={(routeProps) => <Home {...routeProps} />}\n        />\n\n        {/* board 경로 */}\n        <Route\n          exact\n          path=\"/roomInfo\"\n          render={(routeProps) => <RoomInfo {...routeProps} />}\n        />\n\n        <Route\n          exact\n          path=\"/createRoom\"\n          render={(routeProps) => <CreateRoom {...routeProps} />}\n        />\n\n        {/* Mypage 경로 */}\n\n        <Route\n          exact\n          path=\"/mngAccount\"\n          render={(routeProps) => <MngAccount {...routeProps} />}\n        />\n\n        <Route\n          exact\n          path=\"/mngHistory\"\n          render={(routeProps) => <MngHistory {...routeProps} />}\n        />\n      </Switch>\n    </Router>\n  );\n};\n\nexport default App;\n","/Users/tate/Desktop/study/KnockKnock/Knock-Knock-Client/knock-client-app/src/components/main/ModalRouter.js",["89","90"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Modal from \"react-modal\";\nimport \"../../styles/home.css\";\nimport github from \"../../images/logo/github.png\";\nimport google from \"../../images/logo/google.png\";\n\nconst customStyles = {\n  content: {\n    width: \"300px\",\n    top: \"50%\",\n    left: \"50%\",\n    right: \"auto\",\n    bottom: \"auto\",\n    marginRight: \"-50%\",\n    transform: \"translate(-50%, -50%)\",\n  },\n};\n\nexport default function ModalRouter() {\n  var subtitle;\n  const googleOAuthUrl = `\n      https://accounts.google.com/o/oauth2/v2/auth?client_id=872667981680-k0ccru0v0ilhup1bs98maa4vhl2v80qd.apps.googleusercontent.com&redirect_uri=https://localhost:3000/mngAccount&response_type=code&scope=https://www.googleapis.com/auth/userinfo.email+https://www.googleapis.com/auth/userinfo.profile\n      `;\n  const [modalIsOpen, setIsOpen] = React.useState(false);\n  function openModal() {\n    setIsOpen(true);\n  }\n\n  function googleOAuthHandler() {\n    window.location.href = googleOAuthUrl;\n  }\n\n  function afterOpenModal() {\n    // references are now sync'd and can be accessed.\n    subtitle.style.color = \"#f00\";\n  }\n\n  function closeModal() {\n    setIsOpen(false);\n  }\n\n  function componentWillMount() {\n    Modal.setAppElement(\"root\");\n  }\n\n  return (\n    <div>\n      <button onClick={openModal}>시작하기</button>\n      <Modal\n        isOpen={modalIsOpen}\n        onAfterOpen={afterOpenModal}\n        onRequestClose={closeModal}\n        style={customStyles}\n        ariaHideApp={false}\n        contentLabel=\"Example Modal\"\n      >\n        <h1 ref={(_subtitle) => (subtitle = _subtitle)}>Knock Knock</h1>\n        <div>로그인을 해주세요.</div>\n        <form>\n          <div className=\"login_logo\">\n            <img\n              className=\"google\"\n              onClick={googleOAuthHandler}\n              alt=\"\"\n              value=\"google\"\n              src={google}\n            ></img>\n            <img\n              className=\"github\"\n              onClick={(e) => console.log(e.target.value)}\n              alt=\"\"\n              value=\"github\"\n              src={github}\n            ></img>\n          </div>\n        </form>\n        <button onClick={closeModal}>뒤로가기</button>\n      </Modal>\n    </div>\n  );\n}\n","/Users/tate/Desktop/study/KnockKnock/Knock-Knock-Client/knock-client-app/src/components/main/Home.js",["91","92"],"import React from \"react\";\nimport \"../../styles/home.css\";\n\nimport explainImg from \"../../images/homeImg/explainImg.png\";\nimport testImg1 from \"../../images/homeImg/testImg1.png\";\nimport axios from \"axios\";\n\nconst Home = (props) => {\n  const searchParams = {\n    boardType: \"\",\n    boardPeopleNum: \"\",\n    boardSearchText: \"\",\n  };\n\n  function boardTypeHandler(event) {\n    searchParams.boardType = event.target.value;\n  }\n\n  function boardPeopleNumHandler(event) {\n    searchParams.boardPeopleNum = event.target.value;\n  }\n\n  function boardSearchTextHandler(event) {\n    searchParams.boardSearchText = event.target.value;\n  }\n  // 홈에서 검색 필터\n  async function boardSearchClickHandler() {\n    props.history.push(\"/board\", searchParams);\n  }\n\n  function moreBoardHandler() {\n    props.history.push(\"/board\");\n  }\n\n  return (\n    <div className=\"H_container\">\n      <section className=\"H_sec1\">\n        <div className=\"H_sec1_wrap1\">\n          <div className=\"H_mainDoor\">\n            <img\n              src=\"https://maxcdn.icons8.com/app/uploads/2019/10/teamwork-illustration-design-process.png\"\n              alt=\"\"\n            />\n          </div>\n        </div>\n        <div className=\"H_sec1_wrap2\">\n          <div className=\"H_mouse\">\n            <span className=\"H_mouseDot\"></span>\n          </div>\n        </div>\n        <div className=\"H_sec1_wrap3\">\n          <div className=\"H_mainSimpleExplain\">\n            <h1>Knock Knock!</h1>\n            <p>새로운 사람들과 의미있는 무언가를 만들어볼 준비가 되셨나요?</p>\n            <p>함께 나아가고 여러분의 발자취를 남겨보세요!</p>\n          </div>\n          <div className=\"H_searchContainer\">\n            <select className=\"H_boardType\" onChange={boardTypeHandler}>\n              <option value=\"\">게시물 유형</option>\n              <option value=\"project\">프로젝트</option>\n              <option value=\"study\">스터디</option>\n            </select>\n            <div className=\"H_searchBoxBoundary\">|</div>\n            <select\n              className=\"H_boardPeopleNum\"\n              onChange={boardPeopleNumHandler}\n            >\n              <option value=\"\">인원수</option>\n              <option value=\"2\">2명</option>\n              <option value=\"3\">3명</option>\n              <option value=\"4\">4명</option>\n              <option value=\"more\">4명 이상</option>\n            </select>\n            <div className=\"H_searchBoxBoundary\">|</div>\n            <input\n              type=\"text\"\n              className=\"H_boardSearchTextBox\"\n              onChange={boardSearchTextHandler}\n            />\n            <div className=\"H_boardSearchBtn\">\n              <img\n                className=\"H_borardSearchBtnIcon\"\n                src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/0/0b/Search_Icon.svg/1024px-Search_Icon.svg.png\"\n                onClick={boardSearchClickHandler}\n              />\n            </div>\n          </div>\n        </div>\n      </section>\n      <section className=\"H_sec2\">\n        <div className=\"H_sec2_wrap1\">\n          <p>새로운 사람들과 함께 나아가고 여러분의 발자취를 남겨보세요!</p>\n          <p>\n            여러분의 스터디, 프로젝트를 차분히 시작하거나 직접 참여해보세요!\n          </p>\n          <p>이제, 여러분의 시작을 두드리세요!</p>\n        </div>\n        <div className=\"H_sec2_wrap2\">\n          <img src={explainImg} className=\"H_explainImg\" alt=\"\" />\n        </div>\n      </section>\n      <section className=\"H_sec3\">\n        <div className=\"H_sec3_wrap1\">\n          <p>2020년, 현재까지 447 개의 프로젝트를 완료했습니다</p>\n        </div>\n        <div className=\"H_sec3_wrap2\">\n          <img src={testImg1} alt=\"\" />\n        </div>\n      </section>\n      <section className=\"H_sec4\">\n        하이 린수 프로젝트 여기여기 ?\n        <div className=\"H_exhibition\">\n          <img className=\"\" alt=\"\" />\n          <p className=\"\">I wanna make a dreamteam</p>\n        </div>\n        <div className=\"H_exhibition\">\n          <img className=\"\" alt=\"\" />\n          <p className=\"\">I wanna make a dreamteam</p>\n        </div>\n        <div className=\"H_exhibition\">\n          <img className=\"\" alt=\"\" />\n          <p className=\"\">I wanna make a dreamteam</p>\n        </div>\n        <div className=\"H_exhibition\">\n          <img className=\"\" alt=\"\" />\n          <p className=\"\">I wanna make a dreamteam</p>\n        </div>\n      </section>\n      <footer className=\"H_footer\">\n        <div className=\"H_GoToBoard\" onClick={moreBoardHandler}>\n          더보기\n        </div>\n      </footer>\n    </div>\n  );\n};\n\nexport default Home;\n","/Users/tate/Desktop/study/KnockKnock/Knock-Knock-Client/knock-client-app/src/components/mypage/MngAccount.js",[],"/Users/tate/Desktop/study/KnockKnock/Knock-Knock-Client/knock-client-app/src/components/board/createRoom.js",["93","94","95","96"],"import React, { useState } from \"react\";\nimport { CKEditor } from \"@ckeditor/ckeditor5-react\";\nimport ClassicEditor from \"@ckeditor/ckeditor5-build-classic\";\nimport DataForm from \"./dataForm\";\nimport \"../../styles/createRoom.css\";\nimport axios from \"axios\";\n\nconst CreateRoom = (props) => {\n  const [category, setCategory] = useState(\"Category\");\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [roominfo, setRoomInfo] = useState(\"\");\n  const [isCreater, setIsCreater] = useState(true);\n\n  const [crew, setCrew] = useState(0); // project 필수 Study 필수 Question 없음\n  const [position, setPosition] = useState([]); // project 필수 Study 없음 Question 없음\n  const [stack, setStack] = useState([]); // project 필수 Study 선택 Question 선택\n\n  const moveToCreater = () => {\n    this.props.history.push(\"/createRoom\");\n    setIsCreater(false);\n  };\n\n  const getCrew = (e) => {\n    setCrew(e);\n    console.log(\"crew\", crew);\n  };\n\n  const getPosition = (e) => {\n    setPosition(position.concat(e));\n    console.log(\"position\", position);\n    console.log(e);\n  };\n\n  const getStack = (e) => {\n    if (stack.includes(e)) {\n      stack.splice(stack.indexOf(e), 1);\n      setStack(stack);\n    } else {\n      setStack(() => [...stack, e]);\n    }\n  };\n\n  const postRoomInfo = () => {\n    axios\n      .get(\"https://localhost:4000/profile\", {\n        withCredentials: true,\n      })\n      .then((userInfo) => {\n        console.log(\"크리에이트 룸의 유저인포입니다!!!!!!!!\", userInfo);\n        const body = {\n          writer: userInfo.data.userdata.username,\n          category: category,\n          title: title,\n          total: crew,\n          backend: position[0],\n          frontend: position[1],\n          // 스택에 대한 수정 // 양쪽 괄호 빼기[이준희]\n          post_stacks: `${String(stack)}`,\n          content: description,\n        };\n        console.log(\"body = \", body);\n        axios\n          .post(\"https://localhost:4000/posts\", body, { withCredentials: true })\n          .then(() => {\n            props.history.push(\"/board\");\n          });\n      });\n  };\n\n  const studyType = [\"Category\", \"Project\", \"Study\", \"Question\"];\n\n  const postStudyType = studyType.map((el, idx) => {\n    return (\n      <option className=\"listFont\" value={el} key={idx}>\n        {el}\n      </option>\n    );\n  });\n\n  return (\n    <div className=\"Create_Container\">\n      <select\n        className=\"Category\"\n        onChange={(e) => setCategory(e.target.value)}\n      >\n        <>{postStudyType}</>\n      </select>\n      <div>\n        <textarea\n          className=\"title\"\n          placeholder=\"제목을 입력하세요\"\n          onChange={(e) => setTitle(e.target.value)}\n        ></textarea>\n      </div>\n\n      <DataForm\n        category={category}\n        crew={getCrew}\n        position={getPosition}\n        stack={getStack}\n      ></DataForm>\n\n      <CKEditor\n        editor={ClassicEditor}\n        onReady={(editor) => {\n          // You can store the \"editor\" and use when it is needed.\n          console.log(\"Editor is ready to use!\", editor);\n        }}\n        onChange={(event, editor) => {\n          const data = editor.getData();\n          setDescription(data);\n        }}\n        onBlur={(event, editor) => {\n          console.log(\"Blur.\", editor);\n        }}\n        onFocus={(event, editor) => {\n          console.log(\"Focus.\", editor);\n        }}\n      />\n\n      <footer className=\"C_footer\">\n        <div className=\"sendBtn\" onClick={() => postRoomInfo()}>\n          완료\n        </div>\n      </footer>\n    </div>\n  );\n};\n\nexport default CreateRoom;\n","/Users/tate/Desktop/study/KnockKnock/Knock-Knock-Client/knock-client-app/src/components/board/board.js",["97","98","99","100","101"],"import React, { useEffect, useState } from \"react\";\nimport \"../../styles/board.css\";\nimport together from \"../../images/boardImg/together.png\";\nimport closed from \"../../images/boardImg/closed.png\";\nimport question from \"../../images/boardImg/Question.png\";\nimport study from \"../../images/boardImg/studyGroup.png\";\nimport axios from \"axios\";\n\nconst PublicBoard = (props) => {\n  console.log(\"프랍스 로케이션 스테이트\", props.location);\n\n  //const btnList = [\"All\", \"Study\", \"Project\", \"Q&A\"];\n\n  const [posts, setPosts] = useState([]);\n  const [postStacks, setPostStacks] = useState([]);\n  const [postFilter, setPostFilter] = useState(\"\");\n  const [isUser, setIsUser] = useState(\"\"); // 유저의 로그인 여부\n\n  useEffect(async () => {\n    // You need to restrict it at some point\n    // This is just dummy code and should be replaced by actual\n\n    let postsList;\n\n    console.log(\"props.location.state = \", props.location.state);\n\n    if (props.location.state) {\n      const {\n        boardType,\n        boardPeopleNum,\n        boardSearchText,\n      } = props.location.state;\n      postsList = await axios.get(\n        `https://localhost:4000/search?category=${boardType}&total=${boardPeopleNum}&title=${boardSearchText}`,\n        { withCredentials: true }\n      );\n    } else {\n      if (postFilter && postFilter !== \"All\") {\n        postsList = await axios.get(\n          `https://localhost:4000/search?category=${postFilter}&total=&title=`,\n          { withCredentials: true }\n        );\n      } else {\n        postsList = await axios.get(\n          `https://localhost:4000/search?category=&total=&title=`,\n          { withCredentials: true }\n        );\n      }\n    }\n\n    // 전체 게시물을 보여주기 postsList 값 가공\n    let postsArr = [];\n    postsList.data.data.forEach((post) => {\n      let postObj = {\n        id: post.id,\n        category: post.category,\n        title: post.title,\n        total: post.total,\n        open: post.open,\n        frontend: post.frontend,\n        backend: post.backend,\n      };\n\n      // 스택 가공 코드 수정 해야함 [이준희]\n      if (post.post_stacks) {\n        postObj.post_stacks = post.post_stacks.split(\",\");\n      }\n\n      postsArr.push(postObj);\n    });\n\n    setPosts(postsArr);\n\n    // 나중에 수정 해야함(사용자 정보 변경 요청 주소 바뀔 경우)\n    axios\n      .get(\"https://localhost:4000/profile\", { withCredentials: true })\n      .then((user) => {\n        setIsUser(user);\n      });\n\n    console.log(\"isUser = \", isUser);\n  }, [props.location.state, postFilter]);\n\n  const roomCardClickHandler = async (event) => {\n    console.log(\n      \"click시 발생하는 것 =\",\n      event.nativeEvent.path[0].attributes.value\n    );\n    const postId = event.nativeEvent.path[0].attributes.value.value;\n    for (let post of posts) {\n      if (post.id === Number(postId)) {\n        props.history.push(\"/roomInfo\", post);\n      }\n    }\n  };\n\n  const postFilterHandler = (event) => {\n    setPostFilter(event.target.attributes[1].value);\n  };\n\n  return (\n    <div className=\"B_container\">\n      {/* <header className=\"B_header\"></header> */}\n      <div className=\"B_flexbox-container\">\n        <nav className=\"B_SideBarSec\">\n          <ul>\n            <li className=\"B_filterBtn\" value=\"All\" onClick={postFilterHandler}>\n              All\n            </li>\n            <li\n              className=\"B_filterBtn\"\n              value=\"Study\"\n              onClick={postFilterHandler}\n            >\n              Study\n            </li>\n            <li\n              className=\"B_filterBtn\"\n              value=\"Project\"\n              onClick={postFilterHandler}\n            >\n              Project\n            </li>\n            <li\n              className=\"B_filterBtn\"\n              value=\"Question\"\n              onClick={postFilterHandler}\n            >\n              Q{\"&\"}A\n            </li>\n\n            {isUser ? (\n              <li\n                className=\"B_filterBtn\"\n                onClick={() => props.history.push(\"/createRoom\")}\n              >\n                그룹만들기\n              </li>\n            ) : (\n              <></>\n            )}\n          </ul>\n        </nav>\n        <div className=\"B_RoomContaniner\">\n          {/* !!!!!!!!!!!다른 카테고리의 게시물들 수정해야됨!!!!!!!!! / 컴포넌트화 [이준희] */}\n\n          {posts.map((post, idx) => {\n            if (post.open) {\n              if (post.category === \"Project\") {\n                return (\n                  <div\n                    className=\"B_RoomCard\"\n                    value={post.id}\n                    onClick={roomCardClickHandler}\n                  >\n                    <img\n                      src={together}\n                      className=\"B_RoomCard-Img1\"\n                      alt=\"\"\n                      value={post.id}\n                    />\n                    <div className=\"B_RoomCard-category\" value={post.id}>\n                      {post.category}\n                    </div>\n                    <div className=\"B_RoomCard-title\" value={post.id}>\n                      {post.title}\n                    </div>\n                    <div className=\"B_RoomCard-total\">\n                      최대 인원 {post.total}명\n                    </div>\n                    <div className=\"B_RoomCard-position\">\n                      프론트엔드 {post.frontend}명 / 백엔드 {post.backend}명\n                    </div>\n                    <div className=\"B_RoomCard-stacks\">\n                      {post.post_stacks.map((stack) => {\n                        return <div className=\"B_RoomCard-stack\">{stack}</div>;\n                      })}\n                    </div>\n                  </div>\n                );\n              }\n              if (post.category === \"Study\") {\n                return (\n                  <div\n                    className=\"B_RoomCard\"\n                    value={post.id}\n                    onClick={roomCardClickHandler}\n                  >\n                    <img\n                      src={study}\n                      className=\"B_RoomCard-Img3\"\n                      alt=\"\"\n                      value={post.id}\n                    />\n                    <p className=\"B_RoomCard-title\" value={post.id}>\n                      {post.title}\n                    </p>\n                  </div>\n                );\n              }\n              if (post.category === \"Question\") {\n                return (\n                  <div\n                    className=\"B_RoomCard\"\n                    value={post.id}\n                    onClick={roomCardClickHandler}\n                  >\n                    <img\n                      src={question}\n                      className=\"B_RoomCard-Img4\"\n                      alt=\"\"\n                      value={post.id}\n                    />\n                    <p className=\"B_RoomCard-title\" value={post.id}>\n                      {post.title}\n                    </p>\n                  </div>\n                );\n              }\n            } else {\n              return (\n                <div\n                  className=\"B_RoomCard\"\n                  value={post.id}\n                  onClick={roomCardClickHandler}\n                >\n                  <img\n                    src={closed}\n                    className=\"B_RoomCard-Img2\"\n                    alt=\"\"\n                    value={post.id}\n                  />\n                  <p className=\"B_RoomCard-title\" value={post.id}>\n                    {post.title}\n                  </p>\n                </div>\n              );\n            }\n          })}\n          {/* !!!!!!!!!!!다른 카테고리의 게시물들 수정해야됨!!!!!!!!! */}\n        </div>\n      </div>\n      <div className=\"B_footer\">Welcome to the party</div>\n    </div>\n  );\n};\n\nexport default PublicBoard;\n","/Users/tate/Desktop/study/KnockKnock/Knock-Knock-Client/knock-client-app/src/components/mypage/MngHistory.js",[],"/Users/tate/Desktop/study/KnockKnock/Knock-Knock-Client/knock-client-app/src/components/board/roomInfo.js",["102","103"],"/Users/tate/Desktop/study/KnockKnock/Knock-Knock-Client/knock-client-app/src/components/mypage/Mypage.js",[],"/Users/tate/Desktop/study/KnockKnock/Knock-Knock-Client/knock-client-app/src/utils/options.js",[],"/Users/tate/Desktop/study/KnockKnock/Knock-Knock-Client/knock-client-app/src/components/mypage/Profile.js",["104"],"import React from \"react\";\nimport axios from \"axios\";\nimport PrintLogo from \"./PrintStackLogo\"; // lines number of 101 to 104\n\nclass Profile extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLogin: false,\n      userInfo: {},\n    };\n\n    console.log(\"this.props.userInfo = \", this.props);\n  }\n\n  async componentDidMount() {\n    const url = new URL(window.location.href);\n    const authorizationCode = url.searchParams.get(\"code\");\n\n    if (authorizationCode) {\n      await axios\n        .post(\n          \"https://localhost:4000/oauth\",\n          {\n            authorizationCode: authorizationCode,\n          },\n          { withCredentials: true }\n        )\n        .then(async (oauthUserInfo) => {\n          console.log(\"오어스 oauthUserInfo = \", oauthUserInfo);\n          await axios.get(\n            `https://localhost:4000/profile/${oauthUserInfo.data.data.id}`,\n            {\n              withCredentials: true,\n            }\n          );\n          this.setState({ isLogin: true });\n          console.log(\"isLogin=\", this.state.isLogin);\n        });\n    }\n    await axios\n      .get(\"https://localhost:4000/profile\", {\n        withCredentials: true,\n      })\n      .then((userInfo) => {\n        console.log(\"프로필 userInfo = \", userInfo);\n        this.setState({ userInfo: userInfo.data.userdata });\n      });\n  }\n\n  render() {\n    console.log(\"스테이트 안에 유저인포=\", this.state.userInfo);\n    return (\n      <div className=\"mypageContainer_profileSec\">\n        <div className=\"profileSec_profileImg\">\n          {/* 프로필 사진 이미지 [이준희]*/}\n        </div>\n        <div className=\"profileSec_name_mood\">\n          <p className=\"profileSec_username\">\n            {this.state.userInfo ? this.state.userInfo.username : \"\"}\n          </p>\n          <p className=\"profileSec_mood\">\n            {this.state.userInfo ? this.state.userInfo.mood : \"\"}\n          </p>\n        </div>\n        <div className=\"profileSec_btns\">\n          {this.props.isMypage ? (\n            <button\n              className=\"profileSec_btns_mypage\"\n              onClick={() => this.props.mypageClickHandler()}\n            >\n              마이페이지\n            </button>\n          ) : (\n            <button className=\"profileSec_btns_false\">마이페이지</button>\n          )}\n\n          <button\n            className=\"profileSec_btns_historyMng\"\n            onClick={() => this.props.retrospectClickHandler()}\n          >\n            히스토리\n          </button>\n          {this.props.isAccountMng ? (\n            <button\n              className=\"profileSec_btns_accountMng\"\n              onClick={() => this.props.accountMngClickHandler()}\n            >\n              계정 관리\n            </button>\n          ) : (\n            <button className=\"profileSec_btns_false\">계정관리</button>\n          )}\n        </div>\n        <div className=\"profileSec_stacks\">\n          {/* 밑에 있는 로직은 로고를 이미지로 보여주기 위한 컴포넌트 [PrintStackLogo.js]구상중 */}\n          {/* <PrintLogo\n            Logo={this.state.userInfo ? this.state.userInfo.user_stacks : \"\"}\n          /> */}\n          <div>\n            {this.state.userInfo ? this.state.userInfo.user_stacks : \"\"}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Profile;\n","/Users/tate/Desktop/study/KnockKnock/Knock-Knock-Client/knock-client-app/src/components/board/dataForm.js",["105","106","107"],"import React, { useContext, useEffect, useState } from \"react\";\nimport { stacks } from \"../../utils/options\";\nimport \"../../styles/createRoom.css\";\n\nconst DataForm = (props) => {\n  const [message, setMessage] = useState(\"\");\n\n  const isCheck = (e) => {\n    e.target.checked\n      ? props.crew(e.target.value)\n      : setMessage(\"인원선택을 해주세요\");\n  };\n\n  const choiceStack = (e) => {\n    props.stack(e.target.value);\n  };\n\n  const isPosition = (e) => {\n    // 비율에 대한 에러 [이준희]\n    props.position(e.target.value);\n  };\n\n  const howMany = [2, 3, 4, 5];\n\n  const getTogether = howMany.map((el, idx) => {\n    return (\n      <>\n        <input\n          onChange={(e) => {\n            isCheck(e);\n          }}\n          type=\"radio\"\n          id={el}\n          name=\"per\"\n          value={el}\n          key={idx}\n        />\n        <label htmlFor={el}>{el === 5 ? `${el}명이상` : `${el}명`}</label>\n      </>\n    );\n  });\n\n  const stack = stacks.map((el, idx) => {\n    return (\n      <>\n        <input\n          onChange={(e) => {\n            choiceStack(e);\n          }}\n          type=\"checkbox\"\n          id={el}\n          name=\"stack\"\n          value={el}\n          key={idx}\n        />\n        <label htmlFor={el}>{el}</label>\n      </>\n    );\n  });\n\n  return (\n    <div className=\"Data_Container\">\n      <form className=\"DataForm\">\n        <div className=\"Q_one\">\n          <p>1. 인원을 선택해주세요.[project는 최대 4명이 권장사항 입니다.]</p>\n          <>{getTogether}</>\n        </div>\n        {props.category === \"Project\" ? (\n          <>\n            <div className=\"Q_two\">\n              <p>2. 원하시는 Position 비율을 입력해주세요.</p>\n              <div>\n                <input\n                  onChange={(e) => {\n                    isPosition(e);\n                  }}\n                  className=\"Front_end\"\n                  type=\"text\"\n                  placeholder=\"프론트엔드\"\n                />\n                <span>명</span>\n                <input\n                  onChange={(e) => {\n                    isPosition(e);\n                  }}\n                  className=\"Back_end\"\n                  type=\"text\"\n                  placeholder=\"백엔드\"\n                />\n                <span>명</span>\n              </div>\n            </div>\n\n            <div className=\"Q_three\">\n              <p>3.스택을 추가해주세요.</p>\n              <div className=\"Stack\">{stack}</div>\n            </div>\n          </>\n        ) : (\n          <div className=\"Q_three\">\n            <p>2.스택을 추가해주세요.</p>\n            <div className=\"Stack\">{stack}</div>\n          </div>\n        )}\n      </form>\n    </div>\n  );\n};\n\nexport default DataForm;\n","/Users/tate/Desktop/study/KnockKnock/Knock-Knock-Client/knock-client-app/src/components/board/postReply.js",["108"],"import React from \"react\";\nimport \"../../styles/history.css\";\n\nconst PostReply = (props) => {\n  const comment = props.value.map((value, idx) => {\n    if (idx >= 0) {\n      return (\n        <li key={idx} className=\"postReply\">\n          <p className=\"reply_username\">{value.writer}</p>\n          <p className=\"reply_date\">{value.created_at}</p>\n          <p className=\"reply_text\">{value.comment}</p>\n        </li>\n      );\n    }\n  });\n\n  return <>{comment}</>;\n};\n\nexport default PostReply;\n","/Users/tate/Desktop/study/KnockKnock/Knock-Knock-Client/knock-client-app/src/components/mypage/Retrospect.js",["109"],"import React from \"react\";\nimport \"../../styles/history.css\";\n\nconst SendRetrospect = (props) => {\n  console.log(props);\n  const list = props.value.map((value, idx) => {\n    if (idx >= 0) {\n      return (\n        <li key={idx} className=\"His_JournalForm\">\n          <p className=\"Journal_username\">{value.username}</p>\n          <p className=\"Journal_date\">{value.date}</p>\n          <p className=\"Journal_text\">{value.retrospect}</p>\n        </li>\n      );\n    }\n  });\n\n  return <>{list}</>;\n};\n\nexport default SendRetrospect;\n","/Users/tate/Desktop/study/KnockKnock/Knock-Knock-Client/knock-client-app/src/components/mypage/MngHistoryProfile.js",["110"],"import React, { Component } from \"react\";\nimport \"../../styles/history_profile.css\";\n\nclass ProfileEdit extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      projectCategory: \"\",\n    };\n\n    this.filter = this.filter.bind(this);\n    this.retroClickHandler = this.retroClickHandler.bind(this);\n  }\n\n  retroClickHandler(e) {\n    this.props.boardRetroHandler(e.nativeEvent.path[0].attributes.value.value);\n  }\n\n  filter(event) {\n    this.setState({ projectCategory: event.target.value });\n  }\n\n  render() {\n    let postStacksArr = [];\n\n    let filteredPosts = [];\n\n    if (this.state.projectCategory === \"\") {\n      filteredPosts = this.props.userPosts;\n    } else {\n      this.props.userPosts.forEach((post) => {\n        if (post.category === this.state.projectCategory) {\n          filteredPosts.push(post);\n        }\n      });\n    }\n\n    // 스택 가공 코드 수정 해야함 [이준희]\n    filteredPosts.forEach((post) => {\n      if (post.post_stacks) {\n        postStacksArr.push(post.post_stacks.slice(1, -1).split(\",\"));\n      } else {\n        postStacksArr.push(null);\n      }\n    });\n\n    return (\n      <div className=\"mypageContainer_profileSec\">\n        <header className=\"P_headers\">\n          <p className=\"P_subtitle\">히스토리</p>\n          <button onClick={() => this.props.mypageHandleFromHisPro()}>\n            마이페이지\n          </button>\n        </header>\n\n        <select className=\"List_filter\" onChange={this.filter}>\n          <option value=\"\">카테고리를 선택해주세요.</option>\n          <option value=\"Project\">Project</option>\n          <option value=\"Study\">Study</option>\n          <option value=\"Question\">Question</option>\n        </select>\n\n        <nav className=\"List_container\">\n          {filteredPosts.map((project, idx) => {\n            return (\n              <div\n                onClick={this.retroClickHandler}\n                key={idx}\n                value={project.id}\n              >\n                <div className=\"MyList\" value={project.id}>\n                  <div className=\"Context\" value={project.id}>\n                    <div value=\"Project\" value={project.id}>\n                      {project.category}\n                    </div>\n                    <div className=\"Context_projectTitle\" value={project.id}>\n                      {project.title}\n                    </div>\n                    {postStacksArr[idx] ? (\n                      postStacksArr[idx].map((stack) => {\n                        return <div value={project.id}>{stack}</div>;\n                      })\n                    ) : (\n                      <div value={project.id}>스택 없음</div>\n                    )}\n                  </div>\n                  <div className=\"MyList_status\" value={project.id}>\n                    <div className=\"status_createdAt\" value={project.id}>\n                      {project.created_at.split(\"T\")[0]}\n                    </div>\n                    {project.open ? (\n                      <div className=\"status_projectOn\" value={project.id}>\n                        open\n                      </div>\n                    ) : (\n                      <div className=\"status_projectOff\" value={project.id}>\n                        closed\n                      </div>\n                    )}\n                  </div>\n                </div>\n              </div>\n            );\n          })}\n        </nav>\n      </div>\n    );\n  }\n}\n\nexport default ProfileEdit;\n","/Users/tate/Desktop/study/KnockKnock/Knock-Knock-Client/knock-client-app/src/components/mypage/PrintStackLogo.js",["111","112","113","114","115","116","117","118","119"],"import React from \"react\";\nimport \"../../styles/navAndLogo.css\";\nimport { stacks } from \"../../utils/options\";\nimport Javascript from \"../../images/logo/javascript.png\";\nimport Rust from \"../../images/logo/Rust.png\";\nimport Rudy from \"../../images/logo/Ruby.png\";\nimport typescript from \"../../images/logo/typescript.png\";\nimport node from \"../../images/logo/node.png\";\nimport gresql from \"../../images/logo/postgresql.png\";\nimport java from \"../../images/logo/java.png\";\nimport mysql from \"../../images/logo/mysql.png\";\n\nconst PrintLogo = (props) => {\n  //   const makeArr = props.Logo.split(\",\");\n\n  //   if (props.Logo === \"Javascript\")\n  console.log(props.Logo);\n  return (\n    <div>\n      <img className=\"StackLogo\" src={Javascript} />\n      <img className=\"StackLogo\" src={Rust} />\n      <img className=\"StackLogo\" src={Rudy} />\n      <img className=\"StackLogo\" src={typescript} />\n      <img className=\"StackLogo\" src={java} />\n      <img className=\"StackLogo\" src={mysql} />\n      <img className=\"StackLogo\" src={gresql} />\n    </div>\n  );\n};\n\nexport default PrintLogo;\n",{"ruleId":"120","replacedBy":"121"},{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","severity":1,"message":"125","line":1,"column":17,"nodeType":"126","messageId":"127","endLine":1,"endColumn":26},{"ruleId":"124","severity":1,"message":"128","line":2,"column":8,"nodeType":"126","messageId":"127","endLine":2,"endColumn":16},{"ruleId":"124","severity":1,"message":"129","line":43,"column":12,"nodeType":"126","messageId":"127","endLine":43,"endColumn":30},{"ruleId":"124","severity":1,"message":"130","line":6,"column":8,"nodeType":"126","messageId":"127","endLine":6,"endColumn":13},{"ruleId":"131","severity":1,"message":"132","line":81,"column":15,"nodeType":"133","endLine":85,"endColumn":17},{"ruleId":"124","severity":1,"message":"134","line":12,"column":10,"nodeType":"126","messageId":"127","endLine":12,"endColumn":18},{"ruleId":"124","severity":1,"message":"135","line":12,"column":20,"nodeType":"126","messageId":"127","endLine":12,"endColumn":31},{"ruleId":"124","severity":1,"message":"136","line":13,"column":10,"nodeType":"126","messageId":"127","endLine":13,"endColumn":19},{"ruleId":"124","severity":1,"message":"137","line":19,"column":9,"nodeType":"126","messageId":"127","endLine":19,"endColumn":22},{"ruleId":"124","severity":1,"message":"138","line":15,"column":10,"nodeType":"126","messageId":"127","endLine":15,"endColumn":20},{"ruleId":"124","severity":1,"message":"139","line":15,"column":22,"nodeType":"126","messageId":"127","endLine":15,"endColumn":35},{"ruleId":"140","severity":1,"message":"141","line":19,"column":13,"nodeType":"142","endLine":82,"endColumn":4},{"ruleId":"140","severity":1,"message":"143","line":82,"column":6,"nodeType":"144","endLine":82,"endColumn":40,"suggestions":"145"},{"ruleId":"146","severity":1,"message":"147","line":147,"column":34,"nodeType":"142","messageId":"148","endLine":147,"endColumn":36},{"ruleId":"140","severity":1,"message":"149","line":89,"column":6,"nodeType":"144","endLine":89,"endColumn":31,"suggestions":"150"},{"ruleId":"131","severity":1,"message":"132","line":98,"column":13,"nodeType":"133","endLine":98,"endColumn":53},{"ruleId":"124","severity":1,"message":"151","line":3,"column":8,"nodeType":"126","messageId":"127","endLine":3,"endColumn":17},{"ruleId":"124","severity":1,"message":"152","line":1,"column":17,"nodeType":"126","messageId":"127","endLine":1,"endColumn":27},{"ruleId":"124","severity":1,"message":"125","line":1,"column":29,"nodeType":"126","messageId":"127","endLine":1,"endColumn":38},{"ruleId":"124","severity":1,"message":"153","line":6,"column":10,"nodeType":"126","messageId":"127","endLine":6,"endColumn":17},{"ruleId":"146","severity":1,"message":"147","line":5,"column":48,"nodeType":"142","messageId":"148","endLine":5,"endColumn":50},{"ruleId":"146","severity":1,"message":"147","line":6,"column":45,"nodeType":"142","messageId":"148","endLine":6,"endColumn":47},{"ruleId":"154","severity":1,"message":"155","line":74,"column":42,"nodeType":"156","endLine":74,"endColumn":60},{"ruleId":"124","severity":1,"message":"157","line":3,"column":10,"nodeType":"126","messageId":"127","endLine":3,"endColumn":16},{"ruleId":"124","severity":1,"message":"158","line":8,"column":8,"nodeType":"126","messageId":"127","endLine":8,"endColumn":12},{"ruleId":"131","severity":1,"message":"132","line":20,"column":7,"nodeType":"133","endLine":20,"endColumn":53},{"ruleId":"131","severity":1,"message":"132","line":21,"column":7,"nodeType":"133","endLine":21,"endColumn":47},{"ruleId":"131","severity":1,"message":"132","line":22,"column":7,"nodeType":"133","endLine":22,"endColumn":47},{"ruleId":"131","severity":1,"message":"132","line":23,"column":7,"nodeType":"133","endLine":23,"endColumn":53},{"ruleId":"131","severity":1,"message":"132","line":24,"column":7,"nodeType":"133","endLine":24,"endColumn":47},{"ruleId":"131","severity":1,"message":"132","line":25,"column":7,"nodeType":"133","endLine":25,"endColumn":48},{"ruleId":"131","severity":1,"message":"132","line":26,"column":7,"nodeType":"133","endLine":26,"endColumn":49},"no-native-reassign",["159"],"no-negated-in-lhs",["160"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'ReactDOM' is defined but never used.","'componentWillMount' is defined but never used.","'axios' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'roominfo' is assigned a value but never used.","'setRoomInfo' is assigned a value but never used.","'isCreater' is assigned a value but never used.","'moveToCreater' is assigned a value but never used.","'postStacks' is assigned a value but never used.","'setPostStacks' is assigned a value but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'isUser'. Either include it or remove the dependency array.","ArrayExpression",["161"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","React Hook useEffect has a missing dependency: 'getPostComments'. Either include it or remove the dependency array.",["162"],"'PrintLogo' is defined but never used.","'useContext' is defined but never used.","'message' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'stacks' is defined but never used.","'node' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"163","fix":"164"},{"desc":"165","fix":"166"},"Update the dependencies array to be: [props.location.state, postFilter, isUser]",{"range":"167","text":"168"},"Update the dependencies array to be: [getPostComments, props.location.state.id]",{"range":"169","text":"170"},[2403,2437],"[props.location.state, postFilter, isUser]",[2437,2462],"[getPostComments, props.location.state.id]"]