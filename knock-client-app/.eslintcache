[{"/Users/tate/Desktop/study/KnockKnock/Knock-Knock-Client/knock-client-app/src/index.js":"1","/Users/tate/Desktop/study/KnockKnock/Knock-Knock-Client/knock-client-app/src/App.js":"2","/Users/tate/Desktop/study/KnockKnock/Knock-Knock-Client/knock-client-app/src/reportWebVitals.js":"3","/Users/tate/Desktop/study/KnockKnock/Knock-Knock-Client/knock-client-app/src/components/board/createRoom.js":"4","/Users/tate/Desktop/study/KnockKnock/Knock-Knock-Client/knock-client-app/src/components/board/board.js":"5","/Users/tate/Desktop/study/KnockKnock/Knock-Knock-Client/knock-client-app/src/components/board/roomInfo.js":"6","/Users/tate/Desktop/study/KnockKnock/Knock-Knock-Client/knock-client-app/src/components/main/ModalRouter.js":"7","/Users/tate/Desktop/study/KnockKnock/Knock-Knock-Client/knock-client-app/src/components/mypage/MngAccount.js":"8","/Users/tate/Desktop/study/KnockKnock/Knock-Knock-Client/knock-client-app/src/components/mypage/Mypage.js":"9","/Users/tate/Desktop/study/KnockKnock/Knock-Knock-Client/knock-client-app/src/components/main/Home.js":"10","/Users/tate/Desktop/study/KnockKnock/Knock-Knock-Client/knock-client-app/src/components/mypage/MngHistory.js":"11","/Users/tate/Desktop/study/KnockKnock/Knock-Knock-Client/knock-client-app/src/components/board/dataForm.js":"12","/Users/tate/Desktop/study/KnockKnock/Knock-Knock-Client/knock-client-app/src/components/mypage/Profile.js":"13","/Users/tate/Desktop/study/KnockKnock/Knock-Knock-Client/knock-client-app/src/components/board/postReply.js":"14","/Users/tate/Desktop/study/KnockKnock/Knock-Knock-Client/knock-client-app/src/components/mypage/ProfileEditForm.js":"15","/Users/tate/Desktop/study/KnockKnock/Knock-Knock-Client/knock-client-app/src/components/mypage/retrospect.js":"16","/Users/tate/Desktop/study/KnockKnock/Knock-Knock-Client/knock-client-app/src/utils/options.js":"17"},{"size":288,"mtime":1611073640785,"results":"18","hashOfConfig":"19"},{"size":2473,"mtime":1611125533938,"results":"20","hashOfConfig":"19"},{"size":362,"mtime":1610351149920,"results":"21","hashOfConfig":"19"},{"size":3140,"mtime":1611203425072,"results":"22","hashOfConfig":"19"},{"size":5852,"mtime":1611281994926,"results":"23","hashOfConfig":"19"},{"size":5757,"mtime":1611214271735,"results":"24","hashOfConfig":"19"},{"size":2252,"mtime":1611203346817,"results":"25","hashOfConfig":"19"},{"size":5171,"mtime":1611279585052,"results":"26","hashOfConfig":"19"},{"size":3810,"mtime":1611203346818,"results":"27","hashOfConfig":"19"},{"size":4611,"mtime":1611073640783,"results":"28","hashOfConfig":"19"},{"size":2746,"mtime":1611152821492,"results":"29","hashOfConfig":"19"},{"size":2969,"mtime":1611278795182,"results":"30","hashOfConfig":"19"},{"size":2908,"mtime":1611282062528,"results":"31","hashOfConfig":"19"},{"size":491,"mtime":1611203426045,"results":"32","hashOfConfig":"19"},{"size":3458,"mtime":1611109280337,"results":"33","hashOfConfig":"19"},{"size":528,"mtime":1611150933793,"results":"34","hashOfConfig":"19"},{"size":1849,"mtime":1611149193449,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"9synz5",{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"38"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"38"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"38"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"38"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"/Users/tate/Desktop/study/KnockKnock/Knock-Knock-Client/knock-client-app/src/index.js",[],["79","80"],"/Users/tate/Desktop/study/KnockKnock/Knock-Knock-Client/knock-client-app/src/App.js",["81","82"],"import React, { useEffect } from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport \"./styles/nav.css\";\n// import Context from \"../utils/context.js\";\nimport PublicBoard from \"../src/components/board/board\";\nimport Home from \"./components/main/Home\";\nimport Mypage from \"./components/mypage/Mypage\";\nimport CreateRoom from \"./components/board/createRoom\";\nimport RoomInfo from \"./components/board/roomInfo\";\nimport MngAccount from \"./components/mypage/MngAccount\";\nimport MngHistory from \"./components/mypage/MngHistory\";\nimport ModalRouter from \"./components/main/ModalRouter\";\n\nconst axios = require(\"axios\");\n\nconst App = () => {\n  return (\n    <Router>\n      <div className=\"navbar\">\n        <div className=\"navbar_home\">\n          <ModalRouter />\n          <Link to=\"/\">HOME</Link>\n        </div>\n        <div className=\"navbar_board\">\n          <Link to=\"/board\">BOARD</Link>\n        </div>\n        <div className=\"navbar_mypage\">\n          <Link to=\"/mypage\">Mypage</Link>\n        </div>\n\n        <div className=\"navbar_mypage\">\n          <Link to=\"/createRoom\">CreateRoom</Link>\n        </div>\n        <div className=\"navbar_mypage\">\n          <Link to=\"/roominfo\">지울꺼임</Link>\n        </div>\n        <div className=\"navbar_mypage\">\n          <Link to=\"/mngHistory\">지울꺼임2</Link>\n        </div>\n      </div>\n\n      <Switch>\n        {/* navbar 경로 */}\n        <Route\n          exact\n          path=\"/board\"\n          render={(routeProps) => <PublicBoard {...routeProps} />}\n        />\n\n        <Route\n          exact\n          path=\"/mypage\"\n          render={(routeProps) => <Mypage {...routeProps} />}\n        />\n\n        <Route\n          exact\n          path=\"/\"\n          render={(routeProps) => <Home {...routeProps} />}\n        />\n\n        {/* board 경로 */}\n        <Route\n          exact\n          path=\"/roomInfo\"\n          render={(routeProps) => <RoomInfo {...routeProps} />}\n        />\n\n        <Route\n          exact\n          path=\"/createRoom\"\n          render={(routeProps) => <CreateRoom {...routeProps} />}\n        />\n\n        {/* Mypage 경로 */}\n\n        <Route\n          exact\n          path=\"/mngAccount\"\n          render={(routeProps) => <MngAccount {...routeProps} />}\n        />\n\n        <Route\n          exact\n          path=\"/mngHistory\"\n          render={(routeProps) => <MngHistory {...routeProps} />}\n        />\n      </Switch>\n    </Router>\n  );\n};\n\nexport default App;\n","/Users/tate/Desktop/study/KnockKnock/Knock-Knock-Client/knock-client-app/src/reportWebVitals.js",[],"/Users/tate/Desktop/study/KnockKnock/Knock-Knock-Client/knock-client-app/src/components/board/createRoom.js",["83","84","85","86","87"],"import React, { useState } from \"react\";\nimport { CKEditor } from \"@ckeditor/ckeditor5-react\";\nimport ClassicEditor from \"@ckeditor/ckeditor5-build-classic\";\nimport DataForm from \"./dataForm\";\nimport \"../../styles/createRoom.css\";\n\nconst axios = require(\"axios\");\n\nconst CreateRoom = () => {\n  const [category, setCategory] = useState(\"Category\");\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [roominfo, setRoomInfo] = useState(\"\");\n  const [isCreater, setIsCreater] = useState(true);\n\n  const [crew, setCrew] = useState(0); // project 필수 Study 필수 Question 없음\n  const [position, setPosition] = useState([]); // project 필수 Study 없음 Question 없음\n  const [stack, setStack] = useState([]); // project 필수 Study 선택 Question 선택\n\n  const moveToCreater = () => {\n    this.props.history.push(\"/createRoom\");\n    setIsCreater(false);\n  };\n\n  const createRoom = () => {\n    axios({\n      url: \"/createRoom\",\n      method: \"POST\",\n      data: {},\n      withCredentials: true,\n      headers: \"application/json\",\n    });\n  };\n\n  const getCrew = (e) => {\n    setCrew(e);\n    console.log(\"crew\", crew);\n  };\n\n  const getPosition = (e) => {\n    setPosition(position.concat(e));\n    console.log(\"position\", position);\n    console.log(e);\n  };\n\n  const getStack = (e) => {\n    setStack(stack.concat(e));\n  };\n\n  const postRoomInfo = () => {\n    const body = {\n      category: category,\n      title: title,\n      crew: crew,\n      position: position,\n      stack: stack,\n      description: description,\n    };\n    console.log(\"?????\", body);\n    // setRoomInfo(body);\n  };\n\n  const studyType = [\"Category\", \"Project\", \"Study\", \"Question\"];\n\n  const postStudyType = studyType.map((el, idx) => {\n    return (\n      <option className=\"listFont\" value={el} key={idx}>\n        {el}\n      </option>\n    );\n  });\n\n  return (\n    <div className=\"Create_Container\">\n      <select\n        className=\"Category\"\n        onChange={(e) => setCategory(e.target.value)}\n      >\n        <>{postStudyType}</>\n      </select>\n      <div>\n        <textarea\n          className=\"title\"\n          placeholder=\"제목을 입력하세요\"\n          onChange={(e) => setTitle(e.target.value)}\n        ></textarea>\n      </div>\n\n      <DataForm\n        category={category}\n        crew={getCrew}\n        position={getPosition}\n        stack={getStack}\n      ></DataForm>\n\n      <CKEditor\n        editor={ClassicEditor}\n        onReady={(editor) => {\n          // You can store the \"editor\" and use when it is needed.\n          console.log(\"Editor is ready to use!\", editor);\n        }}\n        onChange={(event, editor) => {\n          const data = editor.getData();\n          setDescription(data);\n        }}\n        onBlur={(event, editor) => {\n          console.log(\"Blur.\", editor);\n        }}\n        onFocus={(event, editor) => {\n          console.log(\"Focus.\", editor);\n        }}\n      />\n\n      <footer className=\"C_footer\">\n        <div className=\"sendBtn\" onClick={() => postRoomInfo()}>\n          완료\n        </div>\n      </footer>\n    </div>\n  );\n};\n\nexport default CreateRoom;\n","/Users/tate/Desktop/study/KnockKnock/Knock-Knock-Client/knock-client-app/src/components/board/board.js",["88","89","90"],"/Users/tate/Desktop/study/KnockKnock/Knock-Knock-Client/knock-client-app/src/components/board/roomInfo.js",["91","92","93"],"// import React, { useState, useEffect } from \"react\";\n// import \"../../styles/roomInfo.css\";\n// import together from \"../../images/boardImg/together.png\";\n// import PostReply from \"./postReply\";\n// import axios from \"axios\";\n\n// const RoomInfo = (props) => {\n//   const [reply, setReply] = useState([]); //\n//   const [text, setText] = useState(\"\");\n//   const [errmessage, setErrmessage] = useState(\"\");\n\n//   const getPostComments = async () => {\n//     const postComments = await axios.get(\n//       `http://localhost:4000/comments?postid=${props.location.state.id}`\n//     );\n//     setReply(postComments.data.data);\n//   };\n\n//   const sendReply = () => {\n//     if (text === \"\") {\n//       setErrmessage(\"텍스트를 입력하세요\");\n//     } else {\n//       setErrmessage(\"\");\n//       axios.get(\"http://localhost:4000/profile/1\").then((getUserInfo) => {\n//         const { id, username } = getUserInfo.data.userData;\n//         axios\n//           .post(\"http://localhost:4000/comments\", {\n//             writer: username,\n//             comment: text,\n//             userid: id,\n//             postid: props.location.state.id,\n//           })\n//           .then((postComments) => {\n//             setReply(postComments.data.data);\n//           });\n//       });\n//     }\n//   };\n\n//   const btnList = [\"All\", \"Study\", \"Project\", \"Q&A\", \"그룹만들기\"];\n//   const sideBar = btnList.map((el, idx) => {\n//     return (\n//       <li className=\"C_filterBtn\" key={idx}>\n//         {el}\n//       </li>\n//     );\n//   });\n\n//   function commentChangeHandler(event) {\n//     setText(event.target.value);\n//   }\n\n//   // useEffect(() => {\n//   //   getPostComments();\n//   // }, []);\n\n//   return (\n//     <div className=\"C_flexbox-container\">\n//       <header className=\"board\"></header>\n//       <div className=\"Body_sec\">\n//         <nav className=\"C_SideBarSec\">\n//           <ul>{sideBar}</ul>\n//         </nav>\n//         <div className=\"C_RoomContaniner\">\n//           <div className=\"PostCard\">\n//             <img src={together} className=\"card1\" />\n//           </div>\n//           <div className=\"RoomInfo\">\n//             이 부분이 룸 인포가 들어가는 부분입니다.\n//           </div>\n//           {/* 룸인포 -> 방정보/ 프로젝트or스터디orQuestion에 대한 소개글 [피그마 참고]*/}\n//           <div className=\"ReplyZone\">\n//             {errmessage ? (\n//               <ul>\n//                 <PostReply value={reply} />\n//                 <li>{errmessage}</li>\n//               </ul>\n//             ) : (\n//               <ul>\n//                 <PostReply value={reply} />\n//               </ul>\n//             )}\n//             <textarea onChange={commentChangeHandler} className=\"ReplyBox\" />\n//             <button onClick={sendReply} className=\"SendBtn\">\n//               Send\n//             </button>\n//           </div>\n//         </div>\n//       </div>\n//       <footer className=\"C_footer\">Welcome to the party</footer>\n//     </div>\n//   );\n// };\n// export default RoomInfo;\n\nimport React, { useState, useEffect } from \"react\";\nimport \"../../styles/roomInfo.css\";\nimport together from \"../../images/boardImg/together.png\";\nimport PostReply from \"./postReply\";\nimport axios from \"axios\";\n\nconst RoomInfo = (props) => {\n  const [reply, setReply] = useState([]); //\n  const [text, setText] = useState(\"\");\n  const [errmessage, setErrmessage] = useState(\"\");\n\n  const getPostComments = () => {\n    // const postComments = await axios.get(\n    //   `http://localhost:4000/comments?postid=${props.location.state.id}`\n    // );\n    //setReply(postComments.data.data);\n  };\n\n  const sendReply = () => {\n    let date = new Date().toLocaleDateString().split(\"/\");\n    let [day, month] = [date[0], date[1]];\n    date[0] = month;\n    date[1] = day;\n    let updated_At = date.reverse();\n    let replyInfo = {};\n    if (text === \"\") {\n      setErrmessage(\"텍스트를 입력하세요\");\n    } else {\n      setErrmessage(\"\");\n      replyInfo = {\n        writer: \"Im24기 이준희\",\n        created_at: updated_At,\n        comment: text,\n      };\n    }\n    setReply(() => [...reply, replyInfo]);\n  };\n\n  const btnList = [\"All\", \"Study\", \"Project\", \"Q&A\", \"그룹만들기\"];\n  const sideBar = btnList.map((el, idx) => {\n    return (\n      <li className=\"C_filterBtn\" key={idx}>\n        {el}\n      </li>\n    );\n  });\n\n  function commentChangeHandler(event) {\n    setText(event.target.value);\n  }\n\n  useEffect(() => {\n    console.log(\"text\", text, \"reply\", reply);\n  });\n\n  return (\n    <div className=\"C_flexbox-container\">\n      <header className=\"board\"></header>\n      <div className=\"Body_sec\">\n        <nav className=\"C_SideBarSec\">\n          <ul>{sideBar}</ul>\n        </nav>\n        <div className=\"C_RoomContaniner\">\n          <div className=\"PostCard\">\n            <img src={together} className=\"card1\" />\n          </div>\n          <div className=\"RoomInfo\">\n            이 부분이 룸 인포가 들어가는 부분입니다.\n          </div>\n          {/* 룸인포 -> 방정보/ 프로젝트or스터디orQuestion에 대한 소개글 [피그마 참고]*/}\n          <div className=\"ReplyZone\">\n            {errmessage ? (\n              <ul>\n                <PostReply value={reply} />\n                <li>{errmessage}</li>\n              </ul>\n            ) : (\n              <ul>\n                <PostReply value={reply} />\n              </ul>\n            )}\n            <textarea onChange={commentChangeHandler} className=\"ReplyBox\" />\n            <button onClick={sendReply} className=\"SendBtn\">\n              Send\n            </button>\n          </div>\n        </div>\n      </div>\n      <footer className=\"C_footer\">Welcome to the party</footer>\n    </div>\n  );\n};\nexport default RoomInfo;\n","/Users/tate/Desktop/study/KnockKnock/Knock-Knock-Client/knock-client-app/src/components/main/ModalRouter.js",["94","95"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Modal from \"react-modal\";\nimport \"../../styles/home.css\";\nimport github from \"../../images/logo/github.png\";\nimport google from \"../../images/logo/google.png\";\n\nconst customStyles = {\n  content: {\n    width: \"300px\",\n    top: \"50%\",\n    left: \"50%\",\n    right: \"auto\",\n    bottom: \"auto\",\n    marginRight: \"-50%\",\n    transform: \"translate(-50%, -50%)\",\n  },\n};\n\nexport default function ModalRouter() {\n  var subtitle;\n  const googleOAuthUrl = `\n      https://accounts.google.com/o/oauth2/v2/auth?client_id=872667981680-k0ccru0v0ilhup1bs98maa4vhl2v80qd.apps.googleusercontent.com&redirect_uri=http://localhost:3000/mngAccount&response_type=code&scope=https://www.googleapis.com/auth/userinfo.email+https://www.googleapis.com/auth/userinfo.profile\n      `;\n  const [modalIsOpen, setIsOpen] = React.useState(false);\n  function openModal() {\n    setIsOpen(true);\n  }\n\n  function googleOAuthHandler() {\n    window.location.href = googleOAuthUrl;\n  }\n\n  function afterOpenModal() {\n    // references are now sync'd and can be accessed.\n    subtitle.style.color = \"#f00\";\n  }\n\n  function closeModal() {\n    setIsOpen(false);\n  }\n\n  function componentWillMount() {\n    Modal.setAppElement(\"root\");\n  }\n\n  return (\n    <div>\n      <button onClick={openModal}>시작하기</button>\n      <Modal\n        isOpen={modalIsOpen}\n        onAfterOpen={afterOpenModal}\n        onRequestClose={closeModal}\n        style={customStyles}\n        ariaHideApp={false}\n        contentLabel=\"Example Modal\"\n      >\n        <h1 ref={(_subtitle) => (subtitle = _subtitle)}>Knock Knock</h1>\n        <div>로그인을 해주세요.</div>\n        <form>\n          <div className=\"login_logo\">\n            <img\n              className=\"google\"\n              onClick={googleOAuthHandler}\n              alt=\"\"\n              value=\"google\"\n              src={google}\n            ></img>\n            <img\n              className=\"github\"\n              onClick={(e) => console.log(e.target.value)}\n              alt=\"\"\n              value=\"github\"\n              src={github}\n            ></img>\n          </div>\n        </form>\n        <button onClick={closeModal}>뒤로가기</button>\n      </Modal>\n    </div>\n  );\n}\n","/Users/tate/Desktop/study/KnockKnock/Knock-Knock-Client/knock-client-app/src/components/mypage/MngAccount.js",[],"/Users/tate/Desktop/study/KnockKnock/Knock-Knock-Client/knock-client-app/src/components/mypage/Mypage.js",[],"/Users/tate/Desktop/study/KnockKnock/Knock-Knock-Client/knock-client-app/src/components/main/Home.js",["96","97"],"import React from \"react\";\nimport \"../../styles/home.css\";\n\nimport explainImg from \"../../images/homeImg/explainImg.png\";\nimport testImg1 from \"../../images/homeImg/testImg1.png\";\nimport axios from \"axios\";\n\nconst Home = (props) => {\n  const searchParams = {\n    boardType: \"\",\n    boardPeopleNum: \"\",\n    boardSearchText: \"\",\n  };\n\n  function boardTypeHandler(event) {\n    searchParams.boardType = event.target.value;\n  }\n\n  function boardPeopleNumHandler(event) {\n    searchParams.boardPeopleNum = event.target.value;\n  }\n\n  function boardSearchTextHandler(event) {\n    searchParams.boardSearchText = event.target.value;\n  }\n\n  async function boardSearchClickHandler() {\n    props.history.push(\"/board\", searchParams);\n  }\n\n  return (\n    <div className=\"H_container\">\n      <section className=\"H_sec1\">\n        <div className=\"H_sec1_wrap1\">\n          <div className=\"H_mainDoor\">\n            <img\n              src=\"https://maxcdn.icons8.com/app/uploads/2019/10/teamwork-illustration-design-process.png\"\n              alt=\"\"\n            />\n          </div>\n        </div>\n        <div className=\"H_sec1_wrap2\">\n          <div className=\"H_mouse\">\n            <span className=\"H_mouseDot\"></span>\n          </div>\n        </div>\n        <div className=\"H_sec1_wrap3\">\n          <div className=\"H_mainSimpleExplain\">\n            <h1>Knock Knock!</h1>\n            <p>새로운 사람들과 의미있는 무언가를 만들어볼 준비가 되셨나요?</p>\n            <p>함께 나아가고 여러분의 발자취를 남겨보세요!</p>\n          </div>\n          <div className=\"H_searchContainer\">\n            <select className=\"H_boardType\" onChange={boardTypeHandler}>\n              <option value=\"\">게시물 유형</option>\n              <option value=\"project\">프로젝트</option>\n              <option value=\"study\">스터디</option>\n            </select>\n            <div className=\"H_searchBoxBoundary\">|</div>\n            <select\n              className=\"H_boardPeopleNum\"\n              onChange={boardPeopleNumHandler}\n            >\n              <option value=\"\">인원수</option>\n              <option value=\"2\">2명</option>\n              <option value=\"3\">3명</option>\n              <option value=\"4\">4명</option>\n              <option value=\"more\">4명 이상</option>\n            </select>\n            <div className=\"H_searchBoxBoundary\">|</div>\n            <input\n              type=\"text\"\n              className=\"H_boardSearchTextBox\"\n              onChange={boardSearchTextHandler}\n            />\n            <div className=\"H_boardSearchBtn\">\n              <img\n                className=\"H_borardSearchBtnIcon\"\n                src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/0/0b/Search_Icon.svg/1024px-Search_Icon.svg.png\"\n                onClick={boardSearchClickHandler}\n              />\n            </div>\n          </div>\n        </div>\n      </section>\n      <section className=\"H_sec2\">\n        <div className=\"H_sec2_wrap1\">\n          <p>새로운 사람들과 함께 나아가고 여러분의 발자취를 남겨보세요!</p>\n          <p>\n            여러분의 스터디, 프로젝트를 차분히 시작하거나 직접 참여해보세요!\n          </p>\n          <p>이제, 여러분의 시작을 두드리세요!</p>\n        </div>\n        <div className=\"H_sec2_wrap2\">\n          <img src={explainImg} className=\"H_explainImg\" alt=\"\" />\n        </div>\n      </section>\n      <section className=\"H_sec3\">\n        <div className=\"H_sec3_wrap1\">\n          <p>2020년, 현재까지 447 개의 프로젝트를 완료했습니다</p>\n        </div>\n        <div className=\"H_sec3_wrap2\">\n          <img src={testImg1} alt=\"\" />\n        </div>\n      </section>\n      <section className=\"H_sec4\">\n        하이 린수 프로젝트 여기여기 ?\n        <div className=\"H_exhibition\">\n          <img className=\"\" alt=\"\" />\n          <p className=\"\">I wanna make a dreamteam</p>\n        </div>\n        <div className=\"H_exhibition\">\n          <img className=\"\" alt=\"\" />\n          <p className=\"\">I wanna make a dreamteam</p>\n        </div>\n        <div className=\"H_exhibition\">\n          <img className=\"\" alt=\"\" />\n          <p className=\"\">I wanna make a dreamteam</p>\n        </div>\n        <div className=\"H_exhibition\">\n          <img className=\"\" alt=\"\" />\n          <p className=\"\">I wanna make a dreamteam</p>\n        </div>\n      </section>\n      <footer className=\"H_footer\">\n        <div className=\"H_GoToBoard\" onClick={() => alert(\"인수바보\")}>\n          더보기\n        </div>\n      </footer>\n    </div>\n  );\n};\n\nexport default Home;\n","/Users/tate/Desktop/study/KnockKnock/Knock-Knock-Client/knock-client-app/src/components/mypage/MngHistory.js",[],"/Users/tate/Desktop/study/KnockKnock/Knock-Knock-Client/knock-client-app/src/components/board/dataForm.js",["98","99","100","101","102"],"/Users/tate/Desktop/study/KnockKnock/Knock-Knock-Client/knock-client-app/src/components/mypage/Profile.js",[],"/Users/tate/Desktop/study/KnockKnock/Knock-Knock-Client/knock-client-app/src/components/board/postReply.js",["103"],"import React from \"react\";\nimport \"../../styles/history.css\";\n\nconst PostReply = (props) => {\n  const comment = props.value.map((value, idx) => {\n    if (idx >= 0) {\n      return (\n        <li key={idx} className=\"postReply\">\n          <p className=\"reply_username\">{value.writer}</p>\n          <p className=\"reply_date\">{value.created_at}</p>\n          <p className=\"reply_text\">{value.comment}</p>\n        </li>\n      );\n    }\n  });\n\n  return <>{comment}</>;\n};\n\nexport default PostReply;\n","/Users/tate/Desktop/study/KnockKnock/Knock-Knock-Client/knock-client-app/src/components/mypage/ProfileEditForm.js",["104","105"],"import React, { Component } from \"react\";\nimport \"../../styles/profileEdit.css\";\nimport { fakeData } from \"../../utils/options\";\nclass ProfileEdit extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      projectCategory: \"\",\n    };\n\n    this.filter = this.filter.bind(this);\n    this.boardRetroHandler = this.boardRetroHandler.bind(this);\n  }\n\n  boardRetroHandler(e) {\n    console.log(e.nativeEvent.path[0].attributes.value.value);\n  }\n\n  filter(event) {\n    this.setState({ projectCategory: event.target.value });\n  }\n\n  render() {\n    let postStacksArr = [];\n\n    let filteredPosts = [];\n\n    if (this.state.projectCategory === \"\") {\n      filteredPosts = this.props.userPosts;\n    } else {\n      this.props.userPosts.forEach((post) => {\n        if (post.category === this.state.projectCategory) {\n          filteredPosts.push(post);\n        }\n      });\n    }\n\n    filteredPosts.forEach((post) => {\n      if (post.post_stacks) {\n        postStacksArr.push(\n          post.post_stacks\n            .slice(1, -1)\n            .split(\",\")\n            .map((stack) => {\n              return stack.trim().slice(1, -1);\n            })\n        );\n      } else {\n        postStacksArr.push(null);\n      }\n    });\n\n    return (\n      <div className=\"mypageContainer_profileSec\">\n        <header className=\"P_headers\">\n          <p className=\"P_subtitle\">히스토리</p>\n        </header>\n\n        <select className=\"List_filter\" onChange={this.filter}>\n          <option value=\"\">카테고리를 선택해주세요.</option>\n          <option value=\"Project\">Project</option>\n          <option value=\"Study\">Study</option>\n          <option value=\"Question\">Question</option>\n        </select>\n\n        <nav className=\"List_container\">\n          {filteredPosts.map((project, idx) => {\n            return (\n              <div\n                onClick={this.boardRetroHandler}\n                key={idx}\n                value={project.id}\n              >\n                <div className=\"MyList\" value={project.id}>\n                  <div className=\"Context\" value={project.id}>\n                    <div value=\"Project\" value={project.id}>\n                      {project.category}\n                    </div>\n                    <div className=\"Context_projectTitle\" value={project.id}>\n                      {project.title}\n                    </div>\n                    {postStacksArr[idx] ? (\n                      postStacksArr[idx].map((stack) => {\n                        return <div value={project.id}>{stack}</div>;\n                      })\n                    ) : (\n                      <div value={project.id}>스택 없음</div>\n                    )}\n                  </div>\n                  <div className=\"MyList_status\" value={project.id}>\n                    <div className=\"status_createdAt\" value={project.id}>\n                      {project.created_at.split(\"T\")[0]}\n                    </div>\n                    {project.open ? (\n                      <div className=\"status_projectOn\" value={project.id}>\n                        open\n                      </div>\n                    ) : (\n                      <div className=\"status_projectOff\" value={project.id}>\n                        closed\n                      </div>\n                    )}\n                  </div>\n                </div>\n              </div>\n            );\n          })}\n        </nav>\n      </div>\n    );\n  }\n}\n\nexport default ProfileEdit;\n","/Users/tate/Desktop/study/KnockKnock/Knock-Knock-Client/knock-client-app/src/components/mypage/retrospect.js",["106"],"import React from \"react\";\nimport \"../../styles/history.css\";\n\nconst SendRetrospect = (props) => {\n  console.log(props);\n  const list = props.value.map((value, idx) => {\n    if (idx >= 0) {\n      return (\n        <li key={idx} className=\"His_JournalForm\">\n          <p className=\"Journal_username\">{value.username}</p>\n          <p className=\"Journal_date\">{value.date}</p>\n          <p className=\"Journal_text\">{value.retrospect}</p>\n        </li>\n      );\n    }\n  });\n\n  return <>{list}</>;\n};\n\nexport default SendRetrospect;\n","/Users/tate/Desktop/study/KnockKnock/Knock-Knock-Client/knock-client-app/src/utils/options.js",[],{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","severity":1,"message":"112","line":1,"column":17,"nodeType":"113","messageId":"114","endLine":1,"endColumn":26},{"ruleId":"111","severity":1,"message":"115","line":14,"column":7,"nodeType":"113","messageId":"114","endLine":14,"endColumn":12},{"ruleId":"111","severity":1,"message":"116","line":13,"column":10,"nodeType":"113","messageId":"114","endLine":13,"endColumn":18},{"ruleId":"111","severity":1,"message":"117","line":13,"column":20,"nodeType":"113","messageId":"114","endLine":13,"endColumn":31},{"ruleId":"111","severity":1,"message":"118","line":14,"column":10,"nodeType":"113","messageId":"114","endLine":14,"endColumn":19},{"ruleId":"111","severity":1,"message":"119","line":20,"column":9,"nodeType":"113","messageId":"114","endLine":20,"endColumn":22},{"ruleId":"111","severity":1,"message":"120","line":25,"column":9,"nodeType":"113","messageId":"114","endLine":25,"endColumn":19},{"ruleId":"121","severity":1,"message":"122","line":17,"column":13,"nodeType":"123","endLine":56,"endColumn":4},{"ruleId":"121","severity":1,"message":"124","line":56,"column":6,"nodeType":"125","endLine":56,"endColumn":8,"suggestions":"126"},{"ruleId":"127","severity":1,"message":"128","line":85,"column":34,"nodeType":"123","messageId":"129","endLine":85,"endColumn":36},{"ruleId":"111","severity":1,"message":"130","line":100,"column":8,"nodeType":"113","messageId":"114","endLine":100,"endColumn":13},{"ruleId":"111","severity":1,"message":"131","line":107,"column":9,"nodeType":"113","messageId":"114","endLine":107,"endColumn":24},{"ruleId":"132","severity":1,"message":"133","line":160,"column":13,"nodeType":"134","endLine":160,"endColumn":53},{"ruleId":"111","severity":1,"message":"135","line":2,"column":8,"nodeType":"113","messageId":"114","endLine":2,"endColumn":16},{"ruleId":"111","severity":1,"message":"136","line":43,"column":12,"nodeType":"113","messageId":"114","endLine":43,"endColumn":30},{"ruleId":"111","severity":1,"message":"130","line":6,"column":8,"nodeType":"113","messageId":"114","endLine":6,"endColumn":13},{"ruleId":"132","severity":1,"message":"133","line":77,"column":15,"nodeType":"134","endLine":81,"endColumn":17},{"ruleId":"111","severity":1,"message":"137","line":1,"column":17,"nodeType":"113","messageId":"114","endLine":1,"endColumn":27},{"ruleId":"111","severity":1,"message":"112","line":1,"column":29,"nodeType":"113","messageId":"114","endLine":1,"endColumn":38},{"ruleId":"111","severity":1,"message":"138","line":6,"column":10,"nodeType":"113","messageId":"114","endLine":6,"endColumn":17},{"ruleId":"111","severity":1,"message":"139","line":23,"column":9,"nodeType":"113","messageId":"114","endLine":23,"endColumn":16},{"ruleId":"111","severity":1,"message":"140","line":67,"column":9,"nodeType":"113","messageId":"114","endLine":67,"endColumn":17},{"ruleId":"127","severity":1,"message":"128","line":5,"column":48,"nodeType":"123","messageId":"129","endLine":5,"endColumn":50},{"ruleId":"111","severity":1,"message":"141","line":3,"column":10,"nodeType":"113","messageId":"114","endLine":3,"endColumn":18},{"ruleId":"142","severity":1,"message":"143","line":77,"column":42,"nodeType":"144","endLine":77,"endColumn":60},{"ruleId":"127","severity":1,"message":"128","line":6,"column":45,"nodeType":"123","messageId":"129","endLine":6,"endColumn":47},"no-native-reassign",["145"],"no-negated-in-lhs",["146"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'axios' is assigned a value but never used.","'roominfo' is assigned a value but never used.","'setRoomInfo' is assigned a value but never used.","'isCreater' is assigned a value but never used.","'moveToCreater' is assigned a value but never used.","'createRoom' is assigned a value but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'props.location.state'. Either include it or remove the dependency array.","ArrayExpression",["147"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","'axios' is defined but never used.","'getPostComments' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'ReactDOM' is defined but never used.","'componentWillMount' is defined but never used.","'useContext' is defined but never used.","'message' is assigned a value but never used.","'storage' is assigned a value but never used.","'addStack' is assigned a value but never used.","'fakeData' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-global-assign","no-unsafe-negation",{"desc":"148","fix":"149"},"Update the dependencies array to be: [props.location.state]",{"range":"150","text":"151"},[1541,1543],"[props.location.state]"]