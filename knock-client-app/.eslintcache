[{"/Users/macbookair13/Desktop/codestates/final_project/Knock-Knock-Client/knock-client-app/src/index.js":"1","/Users/macbookair13/Desktop/codestates/final_project/Knock-Knock-Client/knock-client-app/src/reportWebVitals.js":"2","/Users/macbookair13/Desktop/codestates/final_project/Knock-Knock-Client/knock-client-app/src/App.js":"3","/Users/macbookair13/Desktop/codestates/final_project/Knock-Knock-Client/knock-client-app/src/components/board/createRoom.js":"4","/Users/macbookair13/Desktop/codestates/final_project/Knock-Knock-Client/knock-client-app/src/components/board/board.js":"5","/Users/macbookair13/Desktop/codestates/final_project/Knock-Knock-Client/knock-client-app/src/components/main/Home.js":"6","/Users/macbookair13/Desktop/codestates/final_project/Knock-Knock-Client/knock-client-app/src/components/mypage/MngAccount.js":"7","/Users/macbookair13/Desktop/codestates/final_project/Knock-Knock-Client/knock-client-app/src/components/mypage/Mypage.js":"8","/Users/macbookair13/Desktop/codestates/final_project/Knock-Knock-Client/knock-client-app/src/components/mypage/MngHistory.js":"9","/Users/macbookair13/Desktop/codestates/final_project/Knock-Knock-Client/knock-client-app/src/components/main/ModalRouter.js":"10","/Users/macbookair13/Desktop/codestates/final_project/Knock-Knock-Client/knock-client-app/src/components/board/roomInfo.js":"11","/Users/macbookair13/Desktop/codestates/final_project/Knock-Knock-Client/knock-client-app/src/components/mypage/Profile.js":"12","/Users/macbookair13/Desktop/codestates/final_project/Knock-Knock-Client/knock-client-app/src/components/mypage/MngHistoryProfile.js":"13","/Users/macbookair13/Desktop/codestates/final_project/Knock-Knock-Client/knock-client-app/src/components/mypage/Retrospect.js":"14","/Users/macbookair13/Desktop/codestates/final_project/Knock-Knock-Client/knock-client-app/src/components/board/dataForm.js":"15","/Users/macbookair13/Desktop/codestates/final_project/Knock-Knock-Client/knock-client-app/src/utils/options.js":"16","/Users/macbookair13/Desktop/codestates/final_project/Knock-Knock-Client/knock-client-app/src/components/board/postReply.js":"17","/Users/macbookair13/Desktop/codestates/final_project/Knock-Knock-Client/knock-client-app/src/components/mypage/PrintStackLogo.js":"18"},{"size":288,"mtime":1611072841900,"results":"19","hashOfConfig":"20"},{"size":362,"mtime":1610349287357,"results":"21","hashOfConfig":"20"},{"size":2447,"mtime":1611324175747,"results":"22","hashOfConfig":"20"},{"size":3657,"mtime":1611338146991,"results":"23","hashOfConfig":"20"},{"size":9089,"mtime":1611550569761,"results":"24","hashOfConfig":"20"},{"size":4699,"mtime":1611324175750,"results":"25","hashOfConfig":"20"},{"size":4585,"mtime":1611387243462,"results":"26","hashOfConfig":"20"},{"size":3907,"mtime":1611335804416,"results":"27","hashOfConfig":"20"},{"size":5593,"mtime":1611438666427,"results":"28","hashOfConfig":"20"},{"size":2253,"mtime":1611193906067,"results":"29","hashOfConfig":"20"},{"size":10953,"mtime":1611549038032,"results":"30","hashOfConfig":"20"},{"size":3287,"mtime":1611441459973,"results":"31","hashOfConfig":"20"},{"size":3456,"mtime":1611407471688,"results":"32","hashOfConfig":"20"},{"size":680,"mtime":1611412326251,"results":"33","hashOfConfig":"20"},{"size":3895,"mtime":1611414730555,"results":"34","hashOfConfig":"20"},{"size":1885,"mtime":1611387243466,"results":"35","hashOfConfig":"20"},{"size":1440,"mtime":1611522289059,"results":"36","hashOfConfig":"20"},{"size":1078,"mtime":1611324175761,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"y7egwg",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"40"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"40"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"40"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"40"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"40"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"40"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"40"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"40"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"40"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"40"},"/Users/macbookair13/Desktop/codestates/final_project/Knock-Knock-Client/knock-client-app/src/index.js",[],["85","86"],"/Users/macbookair13/Desktop/codestates/final_project/Knock-Knock-Client/knock-client-app/src/reportWebVitals.js",[],"/Users/macbookair13/Desktop/codestates/final_project/Knock-Knock-Client/knock-client-app/src/App.js",["87"],"import React, { useEffect } from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport \"./styles/navAndLogo.css\";\n// import Context from \"../utils/context.js\";\nimport PublicBoard from \"../src/components/board/board\";\nimport Home from \"./components/main/Home\";\nimport Mypage from \"./components/mypage/Mypage\";\nimport CreateRoom from \"./components/board/createRoom\";\nimport RoomInfo from \"./components/board/roomInfo\";\nimport MngAccount from \"./components/mypage/MngAccount\";\nimport MngHistory from \"./components/mypage/MngHistory\";\nimport ModalRouter from \"./components/main/ModalRouter\";\n\nconst App = () => {\n  return (\n    <Router>\n      <div className=\"navbar\">\n        <div className=\"navbar_home\">\n          <ModalRouter />\n          <Link to=\"/\">HOME</Link>\n        </div>\n        <div className=\"navbar_board\">\n          <Link to=\"/board\">BOARD</Link>\n        </div>\n        <div className=\"navbar_mypage\">\n          <Link to=\"/mypage\">Mypage</Link>\n        </div>\n\n        <div className=\"navbar_mypage\">\n          <Link to=\"/createRoom\">CreateRoom</Link>\n        </div>\n        <div className=\"navbar_mypage\">\n          <Link to=\"/roominfo\">지울꺼임</Link>\n        </div>\n        <div className=\"navbar_mypage\">\n          <Link to=\"/mngHistory\">지울꺼임2</Link>\n        </div>\n      </div>\n\n      <Switch>\n        {/* navbar 경로 */}\n        <Route\n          exact\n          path=\"/board\"\n          render={(routeProps) => <PublicBoard {...routeProps} />}\n        />\n\n        <Route\n          exact\n          path=\"/mypage\"\n          render={(routeProps) => <Mypage {...routeProps} />}\n        />\n\n        <Route\n          exact\n          path=\"/\"\n          render={(routeProps) => <Home {...routeProps} />}\n        />\n\n        {/* board 경로 */}\n        <Route\n          exact\n          path=\"/roomInfo\"\n          render={(routeProps) => <RoomInfo {...routeProps} />}\n        />\n\n        <Route\n          exact\n          path=\"/createRoom\"\n          render={(routeProps) => <CreateRoom {...routeProps} />}\n        />\n\n        {/* Mypage 경로 */}\n\n        <Route\n          exact\n          path=\"/mngAccount\"\n          render={(routeProps) => <MngAccount {...routeProps} />}\n        />\n\n        <Route\n          exact\n          path=\"/mngHistory\"\n          render={(routeProps) => <MngHistory {...routeProps} />}\n        />\n      </Switch>\n    </Router>\n  );\n};\n\nexport default App;\n","/Users/macbookair13/Desktop/codestates/final_project/Knock-Knock-Client/knock-client-app/src/components/board/createRoom.js",["88","89","90","91"],"import React, { useState } from \"react\";\nimport { CKEditor } from \"@ckeditor/ckeditor5-react\";\nimport ClassicEditor from \"@ckeditor/ckeditor5-build-classic\";\nimport DataForm from \"./dataForm\";\nimport \"../../styles/createRoom.css\";\nimport axios from \"axios\";\n\nconst CreateRoom = (props) => {\n  const [category, setCategory] = useState(\"Category\");\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [roominfo, setRoomInfo] = useState(\"\");\n  const [isCreater, setIsCreater] = useState(true);\n\n  const [crew, setCrew] = useState(0); // project 필수 Study 필수 Question 없음\n  const [position, setPosition] = useState([]); // project 필수 Study 없음 Question 없음\n  const [stack, setStack] = useState([]); // project 필수 Study 선택 Question 선택\n\n  const moveToCreater = () => {\n    this.props.history.push(\"/createRoom\");\n    setIsCreater(false);\n  };\n\n  const getCrew = (e) => {\n    setCrew(e);\n    console.log(\"crew\", crew);\n  };\n\n  const getPosition = (e) => {\n    setPosition(position.concat(e));\n    console.log(\"position\", position);\n    console.log(e);\n  };\n\n  const getStack = (e) => {\n    if (stack.includes(e)) {\n      stack.splice(stack.indexOf(e), 1);\n      setStack(stack);\n    } else {\n      setStack(() => [...stack, e]);\n    }\n  };\n\n  const postRoomInfo = () => {\n    axios\n      .get(\"https://localhost:4000/profile\", {\n        withCredentials: true,\n      })\n      .then((userInfo) => {\n        console.log(\"크리에이트 룸의 유저인포입니다!!!!!!!!\", userInfo);\n        const body = {\n          writer: userInfo.data.userdata.username,\n          category: category,\n          title: title,\n          total: crew,\n          backend: position[0],\n          frontend: position[1],\n          // 스택에 대한 수정 // 양쪽 괄호 빼기[이준희]\n          post_stacks: `${String(stack)}`,\n          content: description,\n        };\n        console.log(\"body = \", body);\n        axios\n          .post(\"https://localhost:4000/posts\", body, { withCredentials: true })\n          .then(() => {\n            props.history.push(\"/board\");\n          });\n      });\n  };\n\n  const studyType = [\"Category\", \"Project\", \"Study\", \"Question\"];\n\n  const postStudyType = studyType.map((el, idx) => {\n    return (\n      <option className=\"listFont\" value={el} key={idx}>\n        {el}\n      </option>\n    );\n  });\n\n  return (\n    <div className=\"Create_Container\">\n      <select\n        className=\"Category\"\n        onChange={(e) => setCategory(e.target.value)}\n      >\n        <>{postStudyType}</>\n      </select>\n      <div>\n        <textarea\n          className=\"title\"\n          placeholder=\"제목을 입력하세요\"\n          onChange={(e) => setTitle(e.target.value)}\n        ></textarea>\n      </div>\n\n      <DataForm\n        category={category}\n        crew={getCrew}\n        position={getPosition}\n        stack={getStack}\n      ></DataForm>\n\n      <CKEditor\n        editor={ClassicEditor}\n        onReady={(editor) => {\n          // You can store the \"editor\" and use when it is needed.\n          console.log(\"Editor is ready to use!\", editor);\n        }}\n        onChange={(event, editor) => {\n          const data = editor.getData();\n          setDescription(data);\n        }}\n        onBlur={(event, editor) => {\n          console.log(\"Blur.\", editor);\n        }}\n        onFocus={(event, editor) => {\n          console.log(\"Focus.\", editor);\n        }}\n      />\n\n      <footer className=\"C_footer\">\n        <div className=\"sendBtn\" onClick={() => postRoomInfo()}>\n          완료\n        </div>\n      </footer>\n    </div>\n  );\n};\n\nexport default CreateRoom;\n","/Users/macbookair13/Desktop/codestates/final_project/Knock-Knock-Client/knock-client-app/src/components/board/board.js",["92","93","94","95","96","97"],"/Users/macbookair13/Desktop/codestates/final_project/Knock-Knock-Client/knock-client-app/src/components/main/Home.js",["98","99"],"import React from \"react\";\nimport \"../../styles/home.css\";\n\nimport explainImg from \"../../images/homeImg/explainImg.png\";\nimport testImg1 from \"../../images/homeImg/testImg1.png\";\nimport axios from \"axios\";\n\nconst Home = (props) => {\n  const searchParams = {\n    boardType: \"\",\n    boardPeopleNum: \"\",\n    boardSearchText: \"\",\n  };\n\n  function boardTypeHandler(event) {\n    searchParams.boardType = event.target.value;\n  }\n\n  function boardPeopleNumHandler(event) {\n    searchParams.boardPeopleNum = event.target.value;\n  }\n\n  function boardSearchTextHandler(event) {\n    searchParams.boardSearchText = event.target.value;\n  }\n  // 홈에서 검색 필터\n  async function boardSearchClickHandler() {\n    props.history.push(\"/board\", searchParams);\n  }\n\n  function moreBoardHandler() {\n    props.history.push(\"/board\");\n  }\n\n  return (\n    <div className=\"H_container\">\n      <section className=\"H_sec1\">\n        <div className=\"H_sec1_wrap1\">\n          <div className=\"H_mainDoor\">\n            <img\n              src=\"https://maxcdn.icons8.com/app/uploads/2019/10/teamwork-illustration-design-process.png\"\n              alt=\"\"\n            />\n          </div>\n        </div>\n        <div className=\"H_sec1_wrap2\">\n          <div className=\"H_mouse\">\n            <span className=\"H_mouseDot\"></span>\n          </div>\n        </div>\n        <div className=\"H_sec1_wrap3\">\n          <div className=\"H_mainSimpleExplain\">\n            <h1>Knock Knock!</h1>\n            <p>새로운 사람들과 의미있는 무언가를 만들어볼 준비가 되셨나요?</p>\n            <p>함께 나아가고 여러분의 발자취를 남겨보세요!</p>\n          </div>\n          <div className=\"H_searchContainer\">\n            <select className=\"H_boardType\" onChange={boardTypeHandler}>\n              <option value=\"\">게시물 유형</option>\n              <option value=\"project\">프로젝트</option>\n              <option value=\"study\">스터디</option>\n            </select>\n            <div className=\"H_searchBoxBoundary\">|</div>\n            <select\n              className=\"H_boardPeopleNum\"\n              onChange={boardPeopleNumHandler}\n            >\n              <option value=\"\">인원수</option>\n              <option value=\"2\">2명</option>\n              <option value=\"3\">3명</option>\n              <option value=\"4\">4명</option>\n              <option value=\"more\">4명 이상</option>\n            </select>\n            <div className=\"H_searchBoxBoundary\">|</div>\n            <input\n              type=\"text\"\n              className=\"H_boardSearchTextBox\"\n              onChange={boardSearchTextHandler}\n            />\n            <div className=\"H_boardSearchBtn\">\n              <img\n                className=\"H_borardSearchBtnIcon\"\n                src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/0/0b/Search_Icon.svg/1024px-Search_Icon.svg.png\"\n                onClick={boardSearchClickHandler}\n              />\n            </div>\n          </div>\n        </div>\n      </section>\n      <section className=\"H_sec2\">\n        <div className=\"H_sec2_wrap1\">\n          <p>새로운 사람들과 함께 나아가고 여러분의 발자취를 남겨보세요!</p>\n          <p>\n            여러분의 스터디, 프로젝트를 차분히 시작하거나 직접 참여해보세요!\n          </p>\n          <p>이제, 여러분의 시작을 두드리세요!</p>\n        </div>\n        <div className=\"H_sec2_wrap2\">\n          <img src={explainImg} className=\"H_explainImg\" alt=\"\" />\n        </div>\n      </section>\n      <section className=\"H_sec3\">\n        <div className=\"H_sec3_wrap1\">\n          <p>2020년, 현재까지 447 개의 프로젝트를 완료했습니다</p>\n        </div>\n        <div className=\"H_sec3_wrap2\">\n          <img src={testImg1} alt=\"\" />\n        </div>\n      </section>\n      <section className=\"H_sec4\">\n        하이 린수 프로젝트 여기여기 ?\n        <div className=\"H_exhibition\">\n          <img className=\"\" alt=\"\" />\n          <p className=\"\">I wanna make a dreamteam</p>\n        </div>\n        <div className=\"H_exhibition\">\n          <img className=\"\" alt=\"\" />\n          <p className=\"\">I wanna make a dreamteam</p>\n        </div>\n        <div className=\"H_exhibition\">\n          <img className=\"\" alt=\"\" />\n          <p className=\"\">I wanna make a dreamteam</p>\n        </div>\n        <div className=\"H_exhibition\">\n          <img className=\"\" alt=\"\" />\n          <p className=\"\">I wanna make a dreamteam</p>\n        </div>\n      </section>\n      <footer className=\"H_footer\">\n        <div className=\"H_GoToBoard\" onClick={moreBoardHandler}>\n          더보기\n        </div>\n      </footer>\n    </div>\n  );\n};\n\nexport default Home;\n","/Users/macbookair13/Desktop/codestates/final_project/Knock-Knock-Client/knock-client-app/src/components/mypage/MngAccount.js",[],"/Users/macbookair13/Desktop/codestates/final_project/Knock-Knock-Client/knock-client-app/src/components/mypage/Mypage.js",[],"/Users/macbookair13/Desktop/codestates/final_project/Knock-Knock-Client/knock-client-app/src/components/mypage/MngHistory.js",[],"/Users/macbookair13/Desktop/codestates/final_project/Knock-Knock-Client/knock-client-app/src/components/main/ModalRouter.js",["100","101"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Modal from \"react-modal\";\nimport \"../../styles/home.css\";\nimport github from \"../../images/logo/github.png\";\nimport google from \"../../images/logo/google.png\";\n\nconst customStyles = {\n  content: {\n    width: \"300px\",\n    top: \"50%\",\n    left: \"50%\",\n    right: \"auto\",\n    bottom: \"auto\",\n    marginRight: \"-50%\",\n    transform: \"translate(-50%, -50%)\",\n  },\n};\n\nexport default function ModalRouter() {\n  var subtitle;\n  const googleOAuthUrl = `\n      https://accounts.google.com/o/oauth2/v2/auth?client_id=872667981680-k0ccru0v0ilhup1bs98maa4vhl2v80qd.apps.googleusercontent.com&redirect_uri=https://localhost:3000/mngAccount&response_type=code&scope=https://www.googleapis.com/auth/userinfo.email+https://www.googleapis.com/auth/userinfo.profile\n      `;\n  const [modalIsOpen, setIsOpen] = React.useState(false);\n  function openModal() {\n    setIsOpen(true);\n  }\n\n  function googleOAuthHandler() {\n    window.location.href = googleOAuthUrl;\n  }\n\n  function afterOpenModal() {\n    // references are now sync'd and can be accessed.\n    subtitle.style.color = \"#f00\";\n  }\n\n  function closeModal() {\n    setIsOpen(false);\n  }\n\n  function componentWillMount() {\n    Modal.setAppElement(\"root\");\n  }\n\n  return (\n    <div>\n      <button onClick={openModal}>시작하기</button>\n      <Modal\n        isOpen={modalIsOpen}\n        onAfterOpen={afterOpenModal}\n        onRequestClose={closeModal}\n        style={customStyles}\n        ariaHideApp={false}\n        contentLabel=\"Example Modal\"\n      >\n        <h1 ref={(_subtitle) => (subtitle = _subtitle)}>Knock Knock</h1>\n        <div>로그인을 해주세요.</div>\n        <form>\n          <div className=\"login_logo\">\n            <img\n              className=\"google\"\n              onClick={googleOAuthHandler}\n              alt=\"\"\n              value=\"google\"\n              src={google}\n            ></img>\n            <img\n              className=\"github\"\n              onClick={(e) => console.log(e.target.value)}\n              alt=\"\"\n              value=\"github\"\n              src={github}\n            ></img>\n          </div>\n        </form>\n        <button onClick={closeModal}>뒤로가기</button>\n      </Modal>\n    </div>\n  );\n}\n","/Users/macbookair13/Desktop/codestates/final_project/Knock-Knock-Client/knock-client-app/src/components/board/roomInfo.js",["102","103"],"/Users/macbookair13/Desktop/codestates/final_project/Knock-Knock-Client/knock-client-app/src/components/mypage/Profile.js",["104"],"import React from \"react\";\nimport axios from \"axios\";\nimport PrintLogo from \"./PrintStackLogo\"; // lines number of 101 to 104\n\nclass Profile extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLogin: false,\n      userInfo: {},\n    };\n\n    console.log(\"this.props.userInfo = \", this.props);\n  }\n\n  async componentDidMount() {\n    const url = new URL(window.location.href);\n    const authorizationCode = url.searchParams.get(\"code\");\n\n    if (authorizationCode) {\n      await axios\n        .post(\n          \"https://localhost:4000/oauth\",\n          {\n            authorizationCode: authorizationCode,\n          },\n          { withCredentials: true }\n        )\n        .then(async (oauthUserInfo) => {\n          await axios.get(\n            `https://localhost:4000/profile/${oauthUserInfo.data.data.id}`,\n            {\n              withCredentials: true,\n            }\n          );\n          this.setState({ isLogin: true });\n          console.log(\"isLogin=\", this.state.isLogin);\n        });\n    }\n    await axios\n      .get(\"https://localhost:4000/profile\", {\n        withCredentials: true,\n      })\n      .then((userInfo) => {\n        console.log(\"프로필 userInfo = \", userInfo);\n        this.setState({ userInfo: userInfo.data.userdata });\n      });\n  }\n\n  render() {\n    console.log(\"스테이트 안에 유저인포=\", this.state.userInfo);\n    return (\n      <div className=\"mypageContainer_profileSec\">\n        <div className=\"profileSec_profileImg\">\n          {/* 프로필 사진 이미지 [이준희]*/}\n        </div>\n        <div className=\"profileSec_name_mood\">\n          <p className=\"profileSec_username\">\n            {this.state.userInfo ? this.state.userInfo.username : \"\"}\n          </p>\n          <p className=\"profileSec_mood\">\n            {this.state.userInfo ? this.state.userInfo.mood : \"\"}\n          </p>\n        </div>\n        <div className=\"profileSec_btns\">\n          {this.props.isMypage ? (\n            <button\n              className=\"profileSec_btns_mypage\"\n              onClick={() => this.props.mypageClickHandler()}\n            >\n              마이페이지\n            </button>\n          ) : (\n            <button className=\"profileSec_btns_false\">마이페이지</button>\n          )}\n\n          <button\n            className=\"profileSec_btns_historyMng\"\n            onClick={() => this.props.retrospectClickHandler()}\n          >\n            히스토리\n          </button>\n          {this.props.isAccountMng ? (\n            <button\n              className=\"profileSec_btns_accountMng\"\n              onClick={() => this.props.accountMngClickHandler()}\n            >\n              계정 관리\n            </button>\n          ) : (\n            <button className=\"profileSec_btns_false\">계정관리</button>\n          )}\n        </div>\n        <div className=\"profileSec_stacks\">\n          {/* 밑에 있는 로직은 로고를 이미지로 보여주기 위한 컴포넌트 [PrintStackLogo.js]구상중 */}\n          {/* <PrintLogo\n            Logo={this.state.userInfo ? this.state.userInfo.user_stacks : \"\"}\n          /> */}\n          <div>\n            {this.state.userInfo ? this.state.userInfo.user_stacks : \"\"}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Profile;\n","/Users/macbookair13/Desktop/codestates/final_project/Knock-Knock-Client/knock-client-app/src/components/mypage/MngHistoryProfile.js",["105"],"import React, { Component } from \"react\";\nimport \"../../styles/history_profile.css\";\n\nclass ProfileEdit extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      projectCategory: \"\",\n    };\n\n    this.filter = this.filter.bind(this);\n    this.retroClickHandler = this.retroClickHandler.bind(this);\n  }\n\n  retroClickHandler(e) {\n    this.props.boardRetroHandler(e.nativeEvent.path[0].attributes.value.value);\n  }\n\n  filter(event) {\n    this.setState({ projectCategory: event.target.value });\n  }\n\n  render() {\n    let postStacksArr = [];\n\n    let filteredPosts = [];\n\n    if (this.state.projectCategory === \"\") {\n      filteredPosts = this.props.userPosts;\n    } else {\n      this.props.userPosts.forEach((post) => {\n        if (post.category === this.state.projectCategory) {\n          filteredPosts.push(post);\n        }\n      });\n    }\n\n    // 스택 가공 코드 수정 해야함 [이준희]\n    filteredPosts.forEach((post) => {\n      if (post.post_stacks) {\n        postStacksArr.push(post.post_stacks.split(\",\"));\n      } else {\n        postStacksArr.push(null);\n      }\n    });\n\n    return (\n      <div className=\"mypageContainer_profileSec\">\n        <header className=\"P_headers\">\n          <p className=\"P_subtitle\">히스토리</p>\n          <button onClick={() => this.props.mypageHandleFromHisPro()}>\n            마이페이지\n          </button>\n        </header>\n\n        <select className=\"List_filter\" onChange={this.filter}>\n          <option value=\"\">카테고리를 선택해주세요.</option>\n          <option value=\"Project\">Project</option>\n          <option value=\"Study\">Study</option>\n          <option value=\"Question\">Question</option>\n        </select>\n\n        <nav className=\"List_container\">\n          {filteredPosts.map((project, idx) => {\n            return (\n              <div\n                onClick={this.retroClickHandler}\n                key={idx}\n                value={project.id}\n              >\n                <div className=\"MyList\" value={project.id}>\n                  <div className=\"Context\" value={project.id}>\n                    <div value=\"Project\" value={project.id}>\n                      {project.category}\n                    </div>\n                    <div className=\"Context_projectTitle\" value={project.id}>\n                      {project.title}\n                    </div>\n                    {postStacksArr[idx] ? (\n                      postStacksArr[idx].map((stack) => {\n                        return <div value={project.id}>{stack}</div>;\n                      })\n                    ) : (\n                      <div value={project.id}>스택 없음</div>\n                    )}\n                  </div>\n                  <div className=\"MyList_status\" value={project.id}>\n                    <div className=\"status_createdAt\" value={project.id}>\n                      {project.created_at.split(\"T\")[0]}\n                    </div>\n                    {project.open ? (\n                      <div className=\"status_projectOn\" value={project.id}>\n                        open\n                      </div>\n                    ) : (\n                      <div className=\"status_projectOff\" value={project.id}>\n                        closed\n                      </div>\n                    )}\n                  </div>\n                </div>\n              </div>\n            );\n          })}\n        </nav>\n      </div>\n    );\n  }\n}\n\nexport default ProfileEdit;\n","/Users/macbookair13/Desktop/codestates/final_project/Knock-Knock-Client/knock-client-app/src/components/mypage/Retrospect.js",["106"],"import React from \"react\";\nimport \"../../styles/history.css\";\n\nconst SendRetrospect = ({ journals, userData, retroDeleteHandler }) => {\n  const list = journals.map((journal, idx) => {\n    if (idx >= 0) {\n      return (\n        <>\n          <li key={idx} className=\"His_JournalForm\">\n            <p className=\"Journal_username\">{userData.username}</p>\n            <p className=\"Journal_date\">{journal.created_at.split(\"T\")[0]}</p>\n            <p className=\"Journal_text\">{journal.content}</p>\n          </li>\n          <button onClick={() => retroDeleteHandler(journal.id)}>삭제</button>\n        </>\n      );\n    }\n  });\n\n  return <>{list}</>;\n};\n\nexport default SendRetrospect;\n","/Users/macbookair13/Desktop/codestates/final_project/Knock-Knock-Client/knock-client-app/src/components/board/dataForm.js",["107","108","109","110"],"import React, { useContext, useEffect, useState } from \"react\";\nimport { stacks } from \"../../utils/options\";\nimport \"../../styles/createRoom.css\";\n\nconst DataForm = (props) => {\n  const [message, setMessage] = useState(\"\");\n  const [isOver, setIsOver] = useState(false);\n  const isCheck = (e) => {\n    if (e.target.checked) {\n      console.log(e.target.value);\n      if (e.target.value === \"4명이상\") {\n        setIsOver(true);\n        alert(\"그룹 인원은 최대 8명까지 설정할 수 있습니다.\");\n      } else {\n        setIsOver(false);\n        props.crew(e.target.value);\n      }\n    }\n  };\n\n  const overCheck = (e) => {\n    if (e.target.checked) {\n      props.crew(e.target.value);\n    }\n  };\n\n  const choiceStack = (e) => {\n    props.stack(e.target.value);\n  };\n\n  const isPosition = (e) => {\n    // 비율에 대한 에러 [이준희]\n    props.position(e.target.value);\n  };\n\n  const howMany = [2, 3, 4, \"4명이상\"];\n  const overPeople = [5, 6, 7, 8];\n\n  const getTogether = howMany.map((el, idx) => {\n    return (\n      <>\n        <input\n          onChange={(e) => {\n            isCheck(e);\n          }}\n          type=\"radio\"\n          id={el}\n          name=\"per\"\n          value={el}\n          key={idx}\n        />\n        <label htmlFor={el}>{el === \"4명이상\" ? `${el}` : `${el}명`}</label>\n      </>\n    );\n  });\n\n  const overMember = overPeople.map((el, idx) => {\n    return (\n      <>\n        <input\n          onChange={(e) => {\n            overCheck(e);\n          }}\n          type=\"radio\"\n          id={el}\n          name=\"dul\"\n          value={el}\n          key={idx}\n        />\n        <label htmlFor={el}>{el}명</label>\n      </>\n    );\n  });\n\n  const stack = stacks.map((el, idx) => {\n    return (\n      <>\n        <input\n          onChange={(e) => {\n            choiceStack(e);\n          }}\n          type=\"checkbox\"\n          id={el}\n          name=\"stack\"\n          value={el}\n          key={idx}\n        />\n        <label htmlFor={el}>{el}</label>\n      </>\n    );\n  });\n\n  return (\n    <div className=\"Data_Container\">\n      <form className=\"DataForm\">\n        <div className=\"Q_one\">\n          <p>1. 인원을 선택해주세요.[project는 최대 4명이 권장사항 입니다.]</p>\n          <>{getTogether}</>\n          {isOver ? (\n            <div>\n              <p>***최대 모집인원은 8명입니다***</p>\n              <>{overMember}</>\n            </div>\n          ) : (\n            <></>\n          )}\n        </div>\n        {props.category === \"Project\" ? (\n          <>\n            <div className=\"Q_two\">\n              <p>2. 원하시는 Position 비율을 입력해주세요.</p>\n              <p>\n                [이때 본인의 포지션은 비율에서 제외합니다. 4명 모집에 본인이\n                백엔드를 원하면 /프론트 2명 백엔드 1명]\n              </p>\n              <div>\n                <input\n                  onChange={(e) => {\n                    isPosition(e);\n                  }}\n                  className=\"Front_end\"\n                  type=\"text\"\n                  placeholder=\"프론트엔드\"\n                />\n                <span>명</span>\n                <input\n                  onChange={(e) => {\n                    isPosition(e);\n                  }}\n                  className=\"Back_end\"\n                  type=\"text\"\n                  placeholder=\"백엔드\"\n                />\n                <span>명</span>\n              </div>\n            </div>\n\n            <div className=\"Q_three\">\n              <p>3.스택을 추가해주세요.</p>\n              <div className=\"Stack\">{stack}</div>\n            </div>\n          </>\n        ) : (\n          <div className=\"Q_three\">\n            <p>2.스택을 추가해주세요.</p>\n            <div className=\"Stack\">{stack}</div>\n          </div>\n        )}\n      </form>\n    </div>\n  );\n};\n\nexport default DataForm;\n","/Users/macbookair13/Desktop/codestates/final_project/Knock-Knock-Client/knock-client-app/src/utils/options.js",[],"/Users/macbookair13/Desktop/codestates/final_project/Knock-Knock-Client/knock-client-app/src/components/board/postReply.js",["111","112","113"],"import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport \"../../styles/roomInfo.css\";\n\nconst PostReply = (props) => {\n  const [userId, setUserId] = useState(\"\");\n\n  useEffect(async () => {\n    const userInfo = await axios.get(\"https://localhost:4000/profile\", {\n      withCredentials: true,\n    });\n\n    setUserId(userInfo.data.userdata.id);\n  });\n\n  // 날짜기준으로 정렬 하기\n  // 혹시몰라서 놔둠\n  //props.value.sort((a, b) => new Date(b.created_at) - new Date(a.created_at));\n\n  const comment = props.value.map((value, idx) => {\n    let created_at;\n    if (value.created_at) {\n      created_at = value.created_at.split(\"T\")[0];\n    }\n    if (idx >= 0) {\n      return (\n        <li key={idx} value={value.id} className=\"postReply\">\n          {value.user_id === userId ? (\n            <button\n              className=\"reply_del_btn\"\n              onClick={() => props.deleteCommentHandler(value.id)}\n            >\n              X\n            </button>\n          ) : (\n            <></>\n          )}\n          <div className=\"reply_info\">\n            <div className=\"reply_username_date\">\n              <p className=\"reply_username\">{value.writer}</p>\n              <p className=\"reply_date\">{created_at}</p>\n            </div>\n            <p className=\"reply_text\">{value.comment}</p>\n          </div>\n        </li>\n      );\n    }\n  });\n\n  return <>{comment}</>;\n};\n\nexport default PostReply;\n","/Users/macbookair13/Desktop/codestates/final_project/Knock-Knock-Client/knock-client-app/src/components/mypage/PrintStackLogo.js",["114","115","116","117","118","119","120","121","122"],"import React from \"react\";\nimport \"../../styles/navAndLogo.css\";\nimport { stacks } from \"../../utils/options\";\nimport Javascript from \"../../images/logo/javascript.png\";\nimport Rust from \"../../images/logo/Rust.png\";\nimport Rudy from \"../../images/logo/Ruby.png\";\nimport typescript from \"../../images/logo/typescript.png\";\nimport node from \"../../images/logo/node.png\";\nimport gresql from \"../../images/logo/postgresql.png\";\nimport java from \"../../images/logo/java.png\";\nimport mysql from \"../../images/logo/mysql.png\";\n\nconst PrintLogo = (props) => {\n  //   const makeArr = props.Logo.split(\",\");\n\n  //   if (props.Logo === \"Javascript\")\n  console.log(props.Logo);\n  return (\n    <div>\n      <img className=\"StackLogo\" src={Javascript} />\n      <img className=\"StackLogo\" src={Rust} />\n      <img className=\"StackLogo\" src={Rudy} />\n      <img className=\"StackLogo\" src={typescript} />\n      <img className=\"StackLogo\" src={java} />\n      <img className=\"StackLogo\" src={mysql} />\n      <img className=\"StackLogo\" src={gresql} />\n    </div>\n  );\n};\n\nexport default PrintLogo;\n",{"ruleId":"123","replacedBy":"124"},{"ruleId":"125","replacedBy":"126"},{"ruleId":"127","severity":1,"message":"128","line":1,"column":17,"nodeType":"129","messageId":"130","endLine":1,"endColumn":26},{"ruleId":"127","severity":1,"message":"131","line":12,"column":10,"nodeType":"129","messageId":"130","endLine":12,"endColumn":18},{"ruleId":"127","severity":1,"message":"132","line":12,"column":20,"nodeType":"129","messageId":"130","endLine":12,"endColumn":31},{"ruleId":"127","severity":1,"message":"133","line":13,"column":10,"nodeType":"129","messageId":"130","endLine":13,"endColumn":19},{"ruleId":"127","severity":1,"message":"134","line":19,"column":9,"nodeType":"129","messageId":"130","endLine":19,"endColumn":22},{"ruleId":"127","severity":1,"message":"135","line":4,"column":8,"nodeType":"129","messageId":"130","endLine":4,"endColumn":14},{"ruleId":"127","severity":1,"message":"136","line":15,"column":10,"nodeType":"129","messageId":"130","endLine":15,"endColumn":20},{"ruleId":"127","severity":1,"message":"137","line":15,"column":22,"nodeType":"129","messageId":"130","endLine":15,"endColumn":35},{"ruleId":"138","severity":1,"message":"139","line":19,"column":13,"nodeType":"140","endLine":87,"endColumn":4},{"ruleId":"138","severity":1,"message":"141","line":87,"column":6,"nodeType":"142","endLine":87,"endColumn":40,"suggestions":"143"},{"ruleId":"144","severity":1,"message":"145","line":152,"column":34,"nodeType":"140","messageId":"146","endLine":152,"endColumn":36},{"ruleId":"127","severity":1,"message":"147","line":6,"column":8,"nodeType":"129","messageId":"130","endLine":6,"endColumn":13},{"ruleId":"148","severity":1,"message":"149","line":81,"column":15,"nodeType":"150","endLine":85,"endColumn":17},{"ruleId":"127","severity":1,"message":"151","line":2,"column":8,"nodeType":"129","messageId":"130","endLine":2,"endColumn":16},{"ruleId":"127","severity":1,"message":"152","line":43,"column":12,"nodeType":"129","messageId":"130","endLine":43,"endColumn":30},{"ruleId":"138","severity":1,"message":"153","line":140,"column":6,"nodeType":"142","endLine":140,"endColumn":31,"suggestions":"154"},{"ruleId":"148","severity":1,"message":"149","line":150,"column":15,"nodeType":"150","endLine":150,"endColumn":59},{"ruleId":"127","severity":1,"message":"155","line":3,"column":8,"nodeType":"129","messageId":"130","endLine":3,"endColumn":17},{"ruleId":"156","severity":1,"message":"157","line":74,"column":42,"nodeType":"158","endLine":74,"endColumn":60},{"ruleId":"144","severity":1,"message":"145","line":5,"column":44,"nodeType":"140","messageId":"146","endLine":5,"endColumn":46},{"ruleId":"127","severity":1,"message":"159","line":1,"column":17,"nodeType":"129","messageId":"130","endLine":1,"endColumn":27},{"ruleId":"127","severity":1,"message":"128","line":1,"column":29,"nodeType":"129","messageId":"130","endLine":1,"endColumn":38},{"ruleId":"127","severity":1,"message":"160","line":6,"column":10,"nodeType":"129","messageId":"130","endLine":6,"endColumn":17},{"ruleId":"127","severity":1,"message":"161","line":6,"column":19,"nodeType":"129","messageId":"130","endLine":6,"endColumn":29},{"ruleId":"138","severity":1,"message":"162","line":8,"column":3,"nodeType":"129","endLine":8,"endColumn":12,"suggestions":"163"},{"ruleId":"138","severity":1,"message":"139","line":8,"column":13,"nodeType":"140","endLine":14,"endColumn":4},{"ruleId":"144","severity":1,"message":"145","line":20,"column":48,"nodeType":"140","messageId":"146","endLine":20,"endColumn":50},{"ruleId":"127","severity":1,"message":"164","line":3,"column":10,"nodeType":"129","messageId":"130","endLine":3,"endColumn":16},{"ruleId":"127","severity":1,"message":"165","line":8,"column":8,"nodeType":"129","messageId":"130","endLine":8,"endColumn":12},{"ruleId":"148","severity":1,"message":"149","line":20,"column":7,"nodeType":"150","endLine":20,"endColumn":53},{"ruleId":"148","severity":1,"message":"149","line":21,"column":7,"nodeType":"150","endLine":21,"endColumn":47},{"ruleId":"148","severity":1,"message":"149","line":22,"column":7,"nodeType":"150","endLine":22,"endColumn":47},{"ruleId":"148","severity":1,"message":"149","line":23,"column":7,"nodeType":"150","endLine":23,"endColumn":53},{"ruleId":"148","severity":1,"message":"149","line":24,"column":7,"nodeType":"150","endLine":24,"endColumn":47},{"ruleId":"148","severity":1,"message":"149","line":25,"column":7,"nodeType":"150","endLine":25,"endColumn":48},{"ruleId":"148","severity":1,"message":"149","line":26,"column":7,"nodeType":"150","endLine":26,"endColumn":49},"no-native-reassign",["166"],"no-negated-in-lhs",["167"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'roominfo' is assigned a value but never used.","'setRoomInfo' is assigned a value but never used.","'isCreater' is assigned a value but never used.","'moveToCreater' is assigned a value but never used.","'closed' is defined but never used.","'postStacks' is assigned a value but never used.","'setPostStacks' is assigned a value but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'isUser'. Either include it or remove the dependency array.","ArrayExpression",["168"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","'axios' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'ReactDOM' is defined but never used.","'componentWillMount' is defined but never used.","React Hook useEffect has a missing dependency: 'getPostComments'. Either include it or remove the dependency array.",["169"],"'PrintLogo' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'useContext' is defined but never used.","'message' is assigned a value but never used.","'setMessage' is assigned a value but never used.","React Hook useEffect contains a call to 'setUserId'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [] as a second argument to the useEffect Hook.",["170"],"'stacks' is defined but never used.","'node' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"171","fix":"172"},{"desc":"173","fix":"174"},{"desc":"175","fix":"176"},"Update the dependencies array to be: [props.location.state, postFilter, isUser]",{"range":"177","text":"178"},"Update the dependencies array to be: [getPostComments, props.location.state.id]",{"range":"179","text":"180"},"Add dependencies array: []",{"range":"181","text":"182"},[2587,2621],"[props.location.state, postFilter, isUser]",[4013,4038],"[getPostComments, props.location.state.id]",[374,374],", []"]